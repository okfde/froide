// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch'
import {
  type ListProfilesError,
  type ListProfilesResponse,
  type RetrieveUserPreferenceData,
  type RetrieveUserPreferenceError,
  type RetrieveUserPreferenceResponse,
  type CreateUserPreferenceData,
  type CreateUserPreferenceError,
  type CreateUserPreferenceResponse,
  type UpdateUserPreferenceData,
  type UpdateUserPreferenceError,
  type UpdateUserPreferenceResponse,
  type PartialUpdateUserPreferenceData,
  type PartialUpdateUserPreferenceError,
  type PartialUpdateUserPreferenceResponse,
  type ListFoiRequestListsData,
  type ListFoiRequestListsError,
  type ListFoiRequestListsResponse,
  type CreateMakeRequestData,
  type CreateMakeRequestError,
  type CreateMakeRequestResponse,
  type SearchFoiRequestListError,
  type SearchFoiRequestListResponse,
  type TagsAutocompleteFoiRequestListError,
  type TagsAutocompleteFoiRequestListResponse,
  type RetrieveFoiRequestDetailData,
  type RetrieveFoiRequestDetailError,
  type RetrieveFoiRequestDetailResponse,
  type ListFoiMessageDraftsData,
  type ListFoiMessageDraftsError,
  type ListFoiMessageDraftsResponse,
  type CreateFoiMessageDraftData,
  type CreateFoiMessageDraftError,
  type CreateFoiMessageDraftResponse,
  type RetrieveFoiMessageDraftData,
  type RetrieveFoiMessageDraftError,
  type RetrieveFoiMessageDraftResponse,
  type UpdateFoiMessageDraftData,
  type UpdateFoiMessageDraftError,
  type UpdateFoiMessageDraftResponse,
  type PartialUpdateFoiMessageDraftData,
  type PartialUpdateFoiMessageDraftError,
  type PartialUpdateFoiMessageDraftResponse,
  type DestroyFoiMessageDraftData,
  type DestroyFoiMessageDraftError,
  type DestroyFoiMessageDraftResponse,
  type ListFoiMessagesData,
  type ListFoiMessagesError,
  type ListFoiMessagesResponse,
  type RetrieveFoiMessageData,
  type RetrieveFoiMessageError,
  type RetrieveFoiMessageResponse,
  type ListFoiAttachmentsData,
  type ListFoiAttachmentsError,
  type ListFoiAttachmentsResponse,
  type CreateFoiAttachmentTusData,
  type CreateFoiAttachmentTusError,
  type CreateFoiAttachmentTusResponse,
  type RetrieveFoiAttachmentData,
  type RetrieveFoiAttachmentError,
  type RetrieveFoiAttachmentResponse,
  type DestroyFoiRequestListData,
  type DestroyFoiRequestListError,
  type DestroyFoiRequestListResponse,
  type ListFoiRequestFollowsData,
  type ListFoiRequestFollowsError,
  type ListFoiRequestFollowsResponse,
  type CreateCreateFoiRequestFollowData,
  type CreateCreateFoiRequestFollowError,
  type CreateCreateFoiRequestFollowResponse,
  type ListGeoRegionsData,
  type ListGeoRegionsError,
  type ListGeoRegionsResponse,
  type AutocompleteGeoRegionError,
  type AutocompleteGeoRegionResponse,
  type ReconciliationGeoRegionError,
  type ReconciliationGeoRegionResponse,
  type ReconciliationGeoRegion1Data,
  type ReconciliationGeoRegion1Error,
  type ReconciliationGeoRegion1Response,
  type ReconciliationFlyoutEntityGeoRegionError,
  type ReconciliationFlyoutEntityGeoRegionResponse,
  type ReconciliationFlyoutEntityGeoRegion1Data,
  type ReconciliationFlyoutEntityGeoRegion1Error,
  type ReconciliationFlyoutEntityGeoRegion1Response,
  type ReconciliationProposePropertiesGeoRegionError,
  type ReconciliationProposePropertiesGeoRegionResponse,
  type ReconciliationProposePropertiesGeoRegion1Data,
  type ReconciliationProposePropertiesGeoRegion1Error,
  type ReconciliationProposePropertiesGeoRegion1Response,
  type ReconciliationSuggestServiceGeoRegionError,
  type ReconciliationSuggestServiceGeoRegionResponse,
  type ReconciliationSuggestServiceGeoRegion1Data,
  type ReconciliationSuggestServiceGeoRegion1Error,
  type ReconciliationSuggestServiceGeoRegion1Response,
  type RetrieveGeoRegionData,
  type RetrieveGeoRegionError,
  type RetrieveGeoRegionResponse,
  type ListPublicBodyListsData,
  type ListPublicBodyListsError,
  type ListPublicBodyListsResponse,
  type AutocompletePublicBodyListError,
  type AutocompletePublicBodyListResponse,
  type ReconciliationPublicBodyListError,
  type ReconciliationPublicBodyListResponse,
  type ReconciliationPublicBodyList1Data,
  type ReconciliationPublicBodyList1Error,
  type ReconciliationPublicBodyList1Response,
  type ReconciliationFlyoutEntityPublicBodyListError,
  type ReconciliationFlyoutEntityPublicBodyListResponse,
  type ReconciliationFlyoutEntityPublicBodyList1Data,
  type ReconciliationFlyoutEntityPublicBodyList1Error,
  type ReconciliationFlyoutEntityPublicBodyList1Response,
  type ReconciliationProposePropertiesPublicBodyListError,
  type ReconciliationProposePropertiesPublicBodyListResponse,
  type ReconciliationProposePropertiesPublicBodyList1Data,
  type ReconciliationProposePropertiesPublicBodyList1Error,
  type ReconciliationProposePropertiesPublicBodyList1Response,
  type ReconciliationSuggestServicePublicBodyListError,
  type ReconciliationSuggestServicePublicBodyListResponse,
  type ReconciliationSuggestServicePublicBodyList1Data,
  type ReconciliationSuggestServicePublicBodyList1Error,
  type ReconciliationSuggestServicePublicBodyList1Response,
  type SearchPublicBodyListError,
  type SearchPublicBodyListResponse,
  type RetrievePublicBodyData,
  type RetrievePublicBodyError,
  type RetrievePublicBodyResponse,
  type ListCategoriesData,
  type ListCategoriesError,
  type ListCategoriesResponse,
  type AutocompleteCategoryError,
  type AutocompleteCategoryResponse,
  type RetrieveCategoryData,
  type RetrieveCategoryError,
  type RetrieveCategoryResponse,
  type ListClassificationsData,
  type ListClassificationsError,
  type ListClassificationsResponse,
  type RetrieveClassificationData,
  type RetrieveClassificationError,
  type RetrieveClassificationResponse,
  type ListJurisdictionsData,
  type ListJurisdictionsError,
  type ListJurisdictionsResponse,
  type RetrieveJurisdictionData,
  type RetrieveJurisdictionError,
  type RetrieveJurisdictionResponse,
  type ListFoiLawsData,
  type ListFoiLawsError,
  type ListFoiLawsResponse,
  type AutocompleteFoiLawError,
  type AutocompleteFoiLawResponse,
  type RetrieveFoiLawData,
  type RetrieveFoiLawError,
  type RetrieveFoiLawResponse,
  type ListDocumentsData,
  type ListDocumentsError,
  type ListDocumentsResponse,
  type OembedDocumentError,
  type OembedDocumentResponse,
  type RetrieveDocumentDetailData,
  type RetrieveDocumentDetailError,
  type RetrieveDocumentDetailResponse,
  type UpdateUpdateDocumentData,
  type UpdateUpdateDocumentError,
  type UpdateUpdateDocumentResponse,
  type PartialUpdateDocumentData,
  type PartialUpdateDocumentError,
  type PartialUpdateDocumentResponse,
  type ListDocumentCollectionsData,
  type ListDocumentCollectionsError,
  type ListDocumentCollectionsResponse,
  type OembedDocumentCollectionError,
  type OembedDocumentCollectionResponse,
  type RetrieveDocumentCollectionData,
  type RetrieveDocumentCollectionError,
  type RetrieveDocumentCollectionResponse,
  type ListPagesData,
  type ListPagesError,
  type ListPagesResponse,
  type ListPageAnnotationsData,
  type ListPageAnnotationsError,
  type ListPageAnnotationsResponse,
  type CreateCreatePageAnnotationData,
  type CreateCreatePageAnnotationError,
  type CreateCreatePageAnnotationResponse,
  type RetrievePageAnnotationData,
  type RetrievePageAnnotationError,
  type RetrievePageAnnotationResponse,
  type DestroyPageAnnotationData,
  type DestroyPageAnnotationError,
  type DestroyPageAnnotationResponse,
  type ListProblemReportsData,
  type ListProblemReportsError,
  type ListProblemReportsResponse,
  type RetrieveProblemReportData,
  type RetrieveProblemReportError,
  type RetrieveProblemReportResponse,
  type ListCampaignsData,
  type ListCampaignsError,
  type ListCampaignsResponse,
  type RetrieveCampaignData,
  type RetrieveCampaignError,
  type RetrieveCampaignResponse,
  type ListSpectacularSwaggersError,
  type ListSpectacularSwaggersResponse,
  type PublishFoiMessageDraftData,
  type PublishFoiMessageDraftError,
  type PublishFoiMessageDraftResponse,
  type ConvertToPdfImageAttachmentConverterData,
  type ConvertToPdfImageAttachmentConverterError,
  type ConvertToPdfImageAttachmentConverterResponse,
  type ClaimProblemReportData,
  type ClaimProblemReportError,
  type ClaimProblemReportResponse,
  type EscalateProblemReportData,
  type EscalateProblemReportError,
  type EscalateProblemReportResponse,
  type ResolveProblemReportData,
  type ResolveProblemReportError,
  type ResolveProblemReportResponse,
  type UnclaimProblemReportData,
  type UnclaimProblemReportError,
  type UnclaimProblemReportResponse,
  type CreateUploadCreateData,
  type CreateUploadCreateError,
  type CreateUploadCreateResponse,
  type UpdateUploadData,
  type UpdateUploadError,
  type UpdateUploadResponse,
  type PartialUpdateUploadData,
  type PartialUpdateUploadError,
  type PartialUpdateUploadResponse,
  type DestroyUploadData,
  type DestroyUploadError,
  type DestroyUploadResponse,
  type DestroyFoiRequestFollowData,
  type DestroyFoiRequestFollowError,
  type DestroyFoiRequestFollowResponse,
  ListFoiRequestListsResponseTransformer,
  SearchFoiRequestListResponseTransformer,
  TagsAutocompleteFoiRequestListResponseTransformer,
  RetrieveFoiRequestDetailResponseTransformer,
  ListFoiMessageDraftsResponseTransformer,
  CreateFoiMessageDraftResponseTransformer,
  RetrieveFoiMessageDraftResponseTransformer,
  UpdateFoiMessageDraftResponseTransformer,
  PartialUpdateFoiMessageDraftResponseTransformer,
  ListFoiMessagesResponseTransformer,
  RetrieveFoiMessageResponseTransformer,
  ListFoiAttachmentsResponseTransformer,
  RetrieveFoiAttachmentResponseTransformer,
  ListFoiRequestFollowsResponseTransformer,
  ListGeoRegionsResponseTransformer,
  AutocompleteGeoRegionResponseTransformer,
  ReconciliationGeoRegionResponseTransformer,
  ReconciliationGeoRegion1ResponseTransformer,
  ReconciliationFlyoutEntityGeoRegionResponseTransformer,
  ReconciliationFlyoutEntityGeoRegion1ResponseTransformer,
  ReconciliationProposePropertiesGeoRegionResponseTransformer,
  ReconciliationProposePropertiesGeoRegion1ResponseTransformer,
  ReconciliationSuggestServiceGeoRegionResponseTransformer,
  ReconciliationSuggestServiceGeoRegion1ResponseTransformer,
  RetrieveGeoRegionResponseTransformer,
  ListPublicBodyListsResponseTransformer,
  AutocompletePublicBodyListResponseTransformer,
  ReconciliationPublicBodyListResponseTransformer,
  ReconciliationPublicBodyList1ResponseTransformer,
  ReconciliationFlyoutEntityPublicBodyListResponseTransformer,
  ReconciliationFlyoutEntityPublicBodyList1ResponseTransformer,
  ReconciliationProposePropertiesPublicBodyListResponseTransformer,
  ReconciliationProposePropertiesPublicBodyList1ResponseTransformer,
  ReconciliationSuggestServicePublicBodyListResponseTransformer,
  ReconciliationSuggestServicePublicBodyList1ResponseTransformer,
  SearchPublicBodyListResponseTransformer,
  RetrievePublicBodyResponseTransformer,
  ListJurisdictionsResponseTransformer,
  RetrieveJurisdictionResponseTransformer,
  ListFoiLawsResponseTransformer,
  AutocompleteFoiLawResponseTransformer,
  RetrieveFoiLawResponseTransformer,
  ListDocumentsResponseTransformer,
  OembedDocumentResponseTransformer,
  RetrieveDocumentDetailResponseTransformer,
  PartialUpdateDocumentResponseTransformer,
  ListDocumentCollectionsResponseTransformer,
  OembedDocumentCollectionResponseTransformer,
  RetrieveDocumentCollectionResponseTransformer,
  ListPageAnnotationsResponseTransformer,
  RetrievePageAnnotationResponseTransformer,
  ListProblemReportsResponseTransformer,
  RetrieveProblemReportResponseTransformer,
  ListCampaignsResponseTransformer,
  RetrieveCampaignResponseTransformer,
  PublishFoiMessageDraftResponseTransformer,
  ClaimProblemReportResponseTransformer,
  EscalateProblemReportResponseTransformer,
  ResolveProblemReportResponseTransformer,
  UnclaimProblemReportResponseTransformer,
  CreateUploadCreateResponseTransformer,
  UpdateUploadResponseTransformer,
  PartialUpdateUploadResponseTransformer
} from './types.gen'

export const client = createClient(createConfig())

export const listProfiles = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListProfilesResponse,
    ListProfilesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/user/'
  })
}

export const retrieveUserPreference = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveUserPreferenceData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveUserPreferenceResponse,
    RetrieveUserPreferenceError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}

export const createUserPreference = <ThrowOnError extends boolean = false>(
  options: Options<CreateUserPreferenceData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateUserPreferenceResponse,
    CreateUserPreferenceError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}

export const updateUserPreference = <ThrowOnError extends boolean = false>(
  options: Options<UpdateUserPreferenceData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateUserPreferenceResponse,
    UpdateUserPreferenceError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}

export const partialUpdateUserPreference = <
  ThrowOnError extends boolean = false
>(
  options: Options<PartialUpdateUserPreferenceData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    PartialUpdateUserPreferenceResponse,
    PartialUpdateUserPreferenceError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}

export const listFoiRequestLists = <ThrowOnError extends boolean = false>(
  options?: Options<ListFoiRequestListsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListFoiRequestListsResponse,
    ListFoiRequestListsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/',
    responseTransformer: ListFoiRequestListsResponseTransformer
  })
}

export const createMakeRequest = <ThrowOnError extends boolean = false>(
  options?: Options<CreateMakeRequestData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateMakeRequestResponse,
    CreateMakeRequestError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/'
  })
}

export const searchFoiRequestList = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    SearchFoiRequestListResponse,
    SearchFoiRequestListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/search/',
    responseTransformer: SearchFoiRequestListResponseTransformer
  })
}

export const tagsAutocompleteFoiRequestList = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    TagsAutocompleteFoiRequestListResponse,
    TagsAutocompleteFoiRequestListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/tags/autocomplete/',
    responseTransformer: TagsAutocompleteFoiRequestListResponseTransformer
  })
}

export const retrieveFoiRequestDetail = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveFoiRequestDetailData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveFoiRequestDetailResponse,
    RetrieveFoiRequestDetailError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/{id}/',
    responseTransformer: RetrieveFoiRequestDetailResponseTransformer
  })
}

export const listFoiMessageDrafts = <ThrowOnError extends boolean = false>(
  options?: Options<ListFoiMessageDraftsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListFoiMessageDraftsResponse,
    ListFoiMessageDraftsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/',
    responseTransformer: ListFoiMessageDraftsResponseTransformer
  })
}

export const createFoiMessageDraft = <ThrowOnError extends boolean = false>(
  options?: Options<CreateFoiMessageDraftData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateFoiMessageDraftResponse,
    CreateFoiMessageDraftError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/',
    responseTransformer: CreateFoiMessageDraftResponseTransformer
  })
}

export const retrieveFoiMessageDraft = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveFoiMessageDraftData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveFoiMessageDraftResponse,
    RetrieveFoiMessageDraftError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/',
    responseTransformer: RetrieveFoiMessageDraftResponseTransformer
  })
}

export const updateFoiMessageDraft = <ThrowOnError extends boolean = false>(
  options: Options<UpdateFoiMessageDraftData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateFoiMessageDraftResponse,
    UpdateFoiMessageDraftError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/',
    responseTransformer: UpdateFoiMessageDraftResponseTransformer
  })
}

export const partialUpdateFoiMessageDraft = <
  ThrowOnError extends boolean = false
>(
  options: Options<PartialUpdateFoiMessageDraftData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    PartialUpdateFoiMessageDraftResponse,
    PartialUpdateFoiMessageDraftError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/',
    responseTransformer: PartialUpdateFoiMessageDraftResponseTransformer
  })
}

export const destroyFoiMessageDraft = <ThrowOnError extends boolean = false>(
  options: Options<DestroyFoiMessageDraftData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DestroyFoiMessageDraftResponse,
    DestroyFoiMessageDraftError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/'
  })
}

export const listFoiMessages = <ThrowOnError extends boolean = false>(
  options?: Options<ListFoiMessagesData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListFoiMessagesResponse,
    ListFoiMessagesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/',
    responseTransformer: ListFoiMessagesResponseTransformer
  })
}

export const retrieveFoiMessage = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveFoiMessageData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveFoiMessageResponse,
    RetrieveFoiMessageError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/{id}/',
    responseTransformer: RetrieveFoiMessageResponseTransformer
  })
}

export const listFoiAttachments = <ThrowOnError extends boolean = false>(
  options?: Options<ListFoiAttachmentsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListFoiAttachmentsResponse,
    ListFoiAttachmentsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/',
    responseTransformer: ListFoiAttachmentsResponseTransformer
  })
}

export const createFoiAttachmentTus = <ThrowOnError extends boolean = false>(
  options?: Options<CreateFoiAttachmentTusData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateFoiAttachmentTusResponse,
    CreateFoiAttachmentTusError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/'
  })
}

export const retrieveFoiAttachment = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveFoiAttachmentData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveFoiAttachmentResponse,
    RetrieveFoiAttachmentError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/{id}/',
    responseTransformer: RetrieveFoiAttachmentResponseTransformer
  })
}

export const destroyFoiRequestList = <ThrowOnError extends boolean = false>(
  options: Options<DestroyFoiRequestListData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DestroyFoiRequestListResponse,
    DestroyFoiRequestListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/{id}/'
  })
}

export const listFoiRequestFollows = <ThrowOnError extends boolean = false>(
  options?: Options<ListFoiRequestFollowsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListFoiRequestFollowsResponse,
    ListFoiRequestFollowsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/following/',
    responseTransformer: ListFoiRequestFollowsResponseTransformer
  })
}

export const createCreateFoiRequestFollow = <
  ThrowOnError extends boolean = false
>(
  options?: Options<CreateCreateFoiRequestFollowData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateCreateFoiRequestFollowResponse,
    CreateCreateFoiRequestFollowError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/following/'
  })
}

export const listGeoRegions = <ThrowOnError extends boolean = false>(
  options?: Options<ListGeoRegionsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListGeoRegionsResponse,
    ListGeoRegionsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/',
    responseTransformer: ListGeoRegionsResponseTransformer
  })
}

export const autocompleteGeoRegion = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    AutocompleteGeoRegionResponse,
    AutocompleteGeoRegionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/autocomplete/',
    responseTransformer: AutocompleteGeoRegionResponseTransformer
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 */
export const reconciliationGeoRegion = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationGeoRegionResponse,
    ReconciliationGeoRegionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation/',
    responseTransformer: ReconciliationGeoRegionResponseTransformer
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 */
export const reconciliationGeoRegion1 = <ThrowOnError extends boolean = false>(
  options?: Options<ReconciliationGeoRegion1Data, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ReconciliationGeoRegion1Response,
    ReconciliationGeoRegion1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation/',
    responseTransformer: ReconciliationGeoRegion1ResponseTransformer
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 */
export const reconciliationFlyoutEntityGeoRegion = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationFlyoutEntityGeoRegionResponse,
    ReconciliationFlyoutEntityGeoRegionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-flyout/',
    responseTransformer: ReconciliationFlyoutEntityGeoRegionResponseTransformer
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 */
export const reconciliationFlyoutEntityGeoRegion1 = <
  ThrowOnError extends boolean = false
>(
  options?: Options<ReconciliationFlyoutEntityGeoRegion1Data, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ReconciliationFlyoutEntityGeoRegion1Response,
    ReconciliationFlyoutEntityGeoRegion1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-flyout/',
    responseTransformer: ReconciliationFlyoutEntityGeoRegion1ResponseTransformer
  })
}

/**
 * Implements OpenRefine Data Extension API
 */
export const reconciliationProposePropertiesGeoRegion = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationProposePropertiesGeoRegionResponse,
    ReconciliationProposePropertiesGeoRegionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-propose-properties/',
    responseTransformer:
      ReconciliationProposePropertiesGeoRegionResponseTransformer
  })
}

/**
 * Implements OpenRefine Data Extension API
 */
export const reconciliationProposePropertiesGeoRegion1 = <
  ThrowOnError extends boolean = false
>(
  options?: Options<ReconciliationProposePropertiesGeoRegion1Data, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ReconciliationProposePropertiesGeoRegion1Response,
    ReconciliationProposePropertiesGeoRegion1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-propose-properties/',
    responseTransformer:
      ReconciliationProposePropertiesGeoRegion1ResponseTransformer
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 */
export const reconciliationSuggestServiceGeoRegion = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationSuggestServiceGeoRegionResponse,
    ReconciliationSuggestServiceGeoRegionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-suggest-service/',
    responseTransformer:
      ReconciliationSuggestServiceGeoRegionResponseTransformer
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 */
export const reconciliationSuggestServiceGeoRegion1 = <
  ThrowOnError extends boolean = false
>(
  options?: Options<ReconciliationSuggestServiceGeoRegion1Data, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ReconciliationSuggestServiceGeoRegion1Response,
    ReconciliationSuggestServiceGeoRegion1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-suggest-service/',
    responseTransformer:
      ReconciliationSuggestServiceGeoRegion1ResponseTransformer
  })
}

export const retrieveGeoRegion = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveGeoRegionData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveGeoRegionResponse,
    RetrieveGeoRegionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/{id}/',
    responseTransformer: RetrieveGeoRegionResponseTransformer
  })
}

export const listPublicBodyLists = <ThrowOnError extends boolean = false>(
  options?: Options<ListPublicBodyListsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListPublicBodyListsResponse,
    ListPublicBodyListsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/',
    responseTransformer: ListPublicBodyListsResponseTransformer
  })
}

export const autocompletePublicBodyList = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    AutocompletePublicBodyListResponse,
    AutocompletePublicBodyListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/autocomplete/',
    responseTransformer: AutocompletePublicBodyListResponseTransformer
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 */
export const reconciliationPublicBodyList = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationPublicBodyListResponse,
    ReconciliationPublicBodyListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation/',
    responseTransformer: ReconciliationPublicBodyListResponseTransformer
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 */
export const reconciliationPublicBodyList1 = <
  ThrowOnError extends boolean = false
>(
  options?: Options<ReconciliationPublicBodyList1Data, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ReconciliationPublicBodyList1Response,
    ReconciliationPublicBodyList1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation/',
    responseTransformer: ReconciliationPublicBodyList1ResponseTransformer
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 */
export const reconciliationFlyoutEntityPublicBodyList = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationFlyoutEntityPublicBodyListResponse,
    ReconciliationFlyoutEntityPublicBodyListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-flyout/',
    responseTransformer:
      ReconciliationFlyoutEntityPublicBodyListResponseTransformer
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 */
export const reconciliationFlyoutEntityPublicBodyList1 = <
  ThrowOnError extends boolean = false
>(
  options?: Options<ReconciliationFlyoutEntityPublicBodyList1Data, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ReconciliationFlyoutEntityPublicBodyList1Response,
    ReconciliationFlyoutEntityPublicBodyList1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-flyout/',
    responseTransformer:
      ReconciliationFlyoutEntityPublicBodyList1ResponseTransformer
  })
}

/**
 * Implements OpenRefine Data Extension API
 */
export const reconciliationProposePropertiesPublicBodyList = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationProposePropertiesPublicBodyListResponse,
    ReconciliationProposePropertiesPublicBodyListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-propose-properties/',
    responseTransformer:
      ReconciliationProposePropertiesPublicBodyListResponseTransformer
  })
}

/**
 * Implements OpenRefine Data Extension API
 */
export const reconciliationProposePropertiesPublicBodyList1 = <
  ThrowOnError extends boolean = false
>(
  options?: Options<
    ReconciliationProposePropertiesPublicBodyList1Data,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    ReconciliationProposePropertiesPublicBodyList1Response,
    ReconciliationProposePropertiesPublicBodyList1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-propose-properties/',
    responseTransformer:
      ReconciliationProposePropertiesPublicBodyList1ResponseTransformer
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 */
export const reconciliationSuggestServicePublicBodyList = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ReconciliationSuggestServicePublicBodyListResponse,
    ReconciliationSuggestServicePublicBodyListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-suggest-service/',
    responseTransformer:
      ReconciliationSuggestServicePublicBodyListResponseTransformer
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 */
export const reconciliationSuggestServicePublicBodyList1 = <
  ThrowOnError extends boolean = false
>(
  options?: Options<
    ReconciliationSuggestServicePublicBodyList1Data,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    ReconciliationSuggestServicePublicBodyList1Response,
    ReconciliationSuggestServicePublicBodyList1Error,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-suggest-service/',
    responseTransformer:
      ReconciliationSuggestServicePublicBodyList1ResponseTransformer
  })
}

export const searchPublicBodyList = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    SearchPublicBodyListResponse,
    SearchPublicBodyListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/search/',
    responseTransformer: SearchPublicBodyListResponseTransformer
  })
}

export const retrievePublicBody = <ThrowOnError extends boolean = false>(
  options: Options<RetrievePublicBodyData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrievePublicBodyResponse,
    RetrievePublicBodyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/{id}/',
    responseTransformer: RetrievePublicBodyResponseTransformer
  })
}

export const listCategories = <ThrowOnError extends boolean = false>(
  options?: Options<ListCategoriesData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListCategoriesResponse,
    ListCategoriesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/category/'
  })
}

export const autocompleteCategory = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    AutocompleteCategoryResponse,
    AutocompleteCategoryError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/category/autocomplete/'
  })
}

export const retrieveCategory = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveCategoryData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveCategoryResponse,
    RetrieveCategoryError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/category/{id}/'
  })
}

export const listClassifications = <ThrowOnError extends boolean = false>(
  options?: Options<ListClassificationsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListClassificationsResponse,
    ListClassificationsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/classification/'
  })
}

export const retrieveClassification = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveClassificationData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveClassificationResponse,
    RetrieveClassificationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/classification/{id}/'
  })
}

export const listJurisdictions = <ThrowOnError extends boolean = false>(
  options?: Options<ListJurisdictionsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListJurisdictionsResponse,
    ListJurisdictionsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/jurisdiction/',
    responseTransformer: ListJurisdictionsResponseTransformer
  })
}

export const retrieveJurisdiction = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveJurisdictionData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveJurisdictionResponse,
    RetrieveJurisdictionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/jurisdiction/{id}/',
    responseTransformer: RetrieveJurisdictionResponseTransformer
  })
}

export const listFoiLaws = <ThrowOnError extends boolean = false>(
  options?: Options<ListFoiLawsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListFoiLawsResponse,
    ListFoiLawsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/law/',
    responseTransformer: ListFoiLawsResponseTransformer
  })
}

export const autocompleteFoiLaw = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    AutocompleteFoiLawResponse,
    AutocompleteFoiLawError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/law/autocomplete/',
    responseTransformer: AutocompleteFoiLawResponseTransformer
  })
}

export const retrieveFoiLaw = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveFoiLawData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveFoiLawResponse,
    RetrieveFoiLawError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/law/{id}/',
    responseTransformer: RetrieveFoiLawResponseTransformer
  })
}

export const listDocuments = <ThrowOnError extends boolean = false>(
  options?: Options<ListDocumentsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListDocumentsResponse,
    ListDocumentsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/',
    responseTransformer: ListDocumentsResponseTransformer
  })
}

export const oembedDocument = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    OembedDocumentResponse,
    OembedDocumentError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/oembed/',
    responseTransformer: OembedDocumentResponseTransformer
  })
}

export const retrieveDocumentDetail = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveDocumentDetailData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveDocumentDetailResponse,
    RetrieveDocumentDetailError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/{id}/',
    responseTransformer: RetrieveDocumentDetailResponseTransformer
  })
}

export const updateUpdateDocument = <ThrowOnError extends boolean = false>(
  options: Options<UpdateUpdateDocumentData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateUpdateDocumentResponse,
    UpdateUpdateDocumentError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/{id}/'
  })
}

export const partialUpdateDocument = <ThrowOnError extends boolean = false>(
  options: Options<PartialUpdateDocumentData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    PartialUpdateDocumentResponse,
    PartialUpdateDocumentError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/{id}/',
    responseTransformer: PartialUpdateDocumentResponseTransformer
  })
}

export const listDocumentCollections = <ThrowOnError extends boolean = false>(
  options?: Options<ListDocumentCollectionsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListDocumentCollectionsResponse,
    ListDocumentCollectionsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/documentcollection/',
    responseTransformer: ListDocumentCollectionsResponseTransformer
  })
}

export const oembedDocumentCollection = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    OembedDocumentCollectionResponse,
    OembedDocumentCollectionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/documentcollection/oembed/',
    responseTransformer: OembedDocumentCollectionResponseTransformer
  })
}

export const retrieveDocumentCollection = <
  ThrowOnError extends boolean = false
>(
  options: Options<RetrieveDocumentCollectionData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveDocumentCollectionResponse,
    RetrieveDocumentCollectionError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/documentcollection/{id}/',
    responseTransformer: RetrieveDocumentCollectionResponseTransformer
  })
}

export const listPages = <ThrowOnError extends boolean = false>(
  options?: Options<ListPagesData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListPagesResponse,
    ListPagesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/page/'
  })
}

export const listPageAnnotations = <ThrowOnError extends boolean = false>(
  options?: Options<ListPageAnnotationsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListPageAnnotationsResponse,
    ListPageAnnotationsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/',
    responseTransformer: ListPageAnnotationsResponseTransformer
  })
}

export const createCreatePageAnnotation = <
  ThrowOnError extends boolean = false
>(
  options?: Options<CreateCreatePageAnnotationData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateCreatePageAnnotationResponse,
    CreateCreatePageAnnotationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/'
  })
}

export const retrievePageAnnotation = <ThrowOnError extends boolean = false>(
  options: Options<RetrievePageAnnotationData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrievePageAnnotationResponse,
    RetrievePageAnnotationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/{id}/',
    responseTransformer: RetrievePageAnnotationResponseTransformer
  })
}

export const destroyPageAnnotation = <ThrowOnError extends boolean = false>(
  options: Options<DestroyPageAnnotationData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DestroyPageAnnotationResponse,
    DestroyPageAnnotationError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/{id}/'
  })
}

export const listProblemReports = <ThrowOnError extends boolean = false>(
  options?: Options<ListProblemReportsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListProblemReportsResponse,
    ListProblemReportsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/',
    responseTransformer: ListProblemReportsResponseTransformer
  })
}

export const retrieveProblemReport = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveProblemReportData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveProblemReportResponse,
    RetrieveProblemReportError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/',
    responseTransformer: RetrieveProblemReportResponseTransformer
  })
}

export const listCampaigns = <ThrowOnError extends boolean = false>(
  options?: Options<ListCampaignsData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListCampaignsResponse,
    ListCampaignsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/campaign/',
    responseTransformer: ListCampaignsResponseTransformer
  })
}

export const retrieveCampaign = <ThrowOnError extends boolean = false>(
  options: Options<RetrieveCampaignData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RetrieveCampaignResponse,
    RetrieveCampaignError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/campaign/{id}/',
    responseTransformer: RetrieveCampaignResponseTransformer
  })
}

export const listSpectacularSwaggers = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ListSpectacularSwaggersResponse,
    ListSpectacularSwaggersError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/schema/swagger-ui/'
  })
}

export const publishFoiMessageDraft = <ThrowOnError extends boolean = false>(
  options: Options<PublishFoiMessageDraftData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PublishFoiMessageDraftResponse,
    PublishFoiMessageDraftError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/publish/',
    responseTransformer: PublishFoiMessageDraftResponseTransformer
  })
}

export const convertToPdfImageAttachmentConverter = <
  ThrowOnError extends boolean = false
>(
  options: Options<ConvertToPdfImageAttachmentConverterData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ConvertToPdfImageAttachmentConverterResponse,
    ConvertToPdfImageAttachmentConverterError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/{id}/convert_to_pdf/'
  })
}

export const claimProblemReport = <ThrowOnError extends boolean = false>(
  options: Options<ClaimProblemReportData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ClaimProblemReportResponse,
    ClaimProblemReportError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/claim/',
    responseTransformer: ClaimProblemReportResponseTransformer
  })
}

export const escalateProblemReport = <ThrowOnError extends boolean = false>(
  options: Options<EscalateProblemReportData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    EscalateProblemReportResponse,
    EscalateProblemReportError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/escalate/',
    responseTransformer: EscalateProblemReportResponseTransformer
  })
}

export const resolveProblemReport = <ThrowOnError extends boolean = false>(
  options: Options<ResolveProblemReportData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ResolveProblemReportResponse,
    ResolveProblemReportError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/resolve/',
    responseTransformer: ResolveProblemReportResponseTransformer
  })
}

export const unclaimProblemReport = <ThrowOnError extends boolean = false>(
  options: Options<UnclaimProblemReportData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UnclaimProblemReportResponse,
    UnclaimProblemReportError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/unclaim/',
    responseTransformer: UnclaimProblemReportResponseTransformer
  })
}

export const createUploadCreate = <ThrowOnError extends boolean = false>(
  options?: Options<CreateUploadCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    CreateUploadCreateResponse,
    CreateUploadCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/',
    responseTransformer: CreateUploadCreateResponseTransformer
  })
}

export const updateUpload = <ThrowOnError extends boolean = false>(
  options: Options<UpdateUploadData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UpdateUploadResponse,
    UpdateUploadError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/{guid}/',
    responseTransformer: UpdateUploadResponseTransformer
  })
}

export const partialUpdateUpload = <ThrowOnError extends boolean = false>(
  options: Options<PartialUpdateUploadData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    PartialUpdateUploadResponse,
    PartialUpdateUploadError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/{guid}/',
    responseTransformer: PartialUpdateUploadResponseTransformer
  })
}

export const destroyUpload = <ThrowOnError extends boolean = false>(
  options: Options<DestroyUploadData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DestroyUploadResponse,
    DestroyUploadError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/{guid}/'
  })
}

export const destroyFoiRequestFollow = <ThrowOnError extends boolean = false>(
  options: Options<DestroyFoiRequestFollowData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DestroyFoiRequestFollowResponse,
    DestroyFoiRequestFollowError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/following/{id}/'
  })
}
