// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch'
import {
  type AttachmentListData,
  type AttachmentListError,
  type AttachmentListResponse,
  type AttachmentCreateData,
  type AttachmentCreateError,
  type AttachmentCreateResponse,
  type AttachmentRetrieveData,
  type AttachmentRetrieveError,
  type AttachmentRetrieveResponse,
  type AttachmentDestroyData,
  type AttachmentDestroyError,
  type AttachmentDestroyResponse,
  type ConvertImagesToPdfData,
  type ConvertImagesToPdfError,
  type ConvertImagesToPdfResponse,
  type CampaignListData,
  type CampaignListError,
  type CampaignListResponse,
  type CampaignRetrieveData,
  type CampaignRetrieveError,
  type CampaignRetrieveResponse,
  type CategoryListData,
  type CategoryListError,
  type CategoryListResponse,
  type CategoryRetrieveData,
  type CategoryRetrieveError,
  type CategoryRetrieveResponse,
  type CategoryAutocompleteRetrieveData,
  type CategoryAutocompleteRetrieveError,
  type CategoryAutocompleteRetrieveResponse,
  type ClassificationListData,
  type ClassificationListError,
  type ClassificationListResponse,
  type ClassificationRetrieveData,
  type ClassificationRetrieveError,
  type ClassificationRetrieveResponse,
  type DocumentListData,
  type DocumentListError,
  type DocumentListResponse,
  type DocumentRetrieveData,
  type DocumentRetrieveError,
  type DocumentRetrieveResponse,
  type DocumentUpdateData,
  type DocumentUpdateError,
  type DocumentUpdateResponse,
  type DocumentPartialUpdateData,
  type DocumentPartialUpdateError,
  type DocumentPartialUpdateResponse,
  type DocumentOembedRetrieveData,
  type DocumentOembedRetrieveError,
  type DocumentOembedRetrieveResponse,
  type DocumentcollectionListData,
  type DocumentcollectionListError,
  type DocumentcollectionListResponse,
  type DocumentcollectionRetrieveData,
  type DocumentcollectionRetrieveError,
  type DocumentcollectionRetrieveResponse,
  type DocumentcollectionOembedRetrieveData,
  type DocumentcollectionOembedRetrieveError,
  type DocumentcollectionOembedRetrieveResponse,
  type FollowingListData,
  type FollowingListError,
  type FollowingListResponse,
  type FollowingCreateData,
  type FollowingCreateError,
  type FollowingCreateResponse,
  type FollowingDestroyData,
  type FollowingDestroyError,
  type FollowingDestroyResponse,
  type GeoregionListData,
  type GeoregionListError,
  type GeoregionListResponse,
  type GeoregionRetrieveData,
  type GeoregionRetrieveError,
  type GeoregionRetrieveResponse,
  type GeoregionAutocompleteRetrieveData,
  type GeoregionAutocompleteRetrieveError,
  type GeoregionAutocompleteRetrieveResponse,
  type GeoregionReconciliationRetrieveData,
  type GeoregionReconciliationRetrieveError,
  type GeoregionReconciliationRetrieveResponse,
  type GeoregionReconciliationCreateData,
  type GeoregionReconciliationCreateError,
  type GeoregionReconciliationCreateResponse,
  type GeoregionReconciliationFlyoutRetrieveData,
  type GeoregionReconciliationFlyoutRetrieveError,
  type GeoregionReconciliationFlyoutRetrieveResponse,
  type GeoregionReconciliationFlyoutCreateData,
  type GeoregionReconciliationFlyoutCreateError,
  type GeoregionReconciliationFlyoutCreateResponse,
  type GeoregionReconciliationProposePropertiesRetrieveData,
  type GeoregionReconciliationProposePropertiesRetrieveError,
  type GeoregionReconciliationProposePropertiesRetrieveResponse,
  type GeoregionReconciliationProposePropertiesCreateData,
  type GeoregionReconciliationProposePropertiesCreateError,
  type GeoregionReconciliationProposePropertiesCreateResponse,
  type GeoregionReconciliationSuggestServiceRetrieveData,
  type GeoregionReconciliationSuggestServiceRetrieveError,
  type GeoregionReconciliationSuggestServiceRetrieveResponse,
  type GeoregionReconciliationSuggestServiceCreateData,
  type GeoregionReconciliationSuggestServiceCreateError,
  type GeoregionReconciliationSuggestServiceCreateResponse,
  type JurisdictionListData,
  type JurisdictionListError,
  type JurisdictionListResponse,
  type JurisdictionRetrieveData,
  type JurisdictionRetrieveError,
  type JurisdictionRetrieveResponse,
  type LawListData,
  type LawListError,
  type LawListResponse,
  type LawRetrieveData,
  type LawRetrieveError,
  type LawRetrieveResponse,
  type LawAutocompleteRetrieveData,
  type LawAutocompleteRetrieveError,
  type LawAutocompleteRetrieveResponse,
  type MessageListData,
  type MessageListError,
  type MessageListResponse,
  type MessageRetrieveData,
  type MessageRetrieveError,
  type MessageRetrieveResponse,
  type MessageDraftListData,
  type MessageDraftListError,
  type MessageDraftListResponse,
  type MessageDraftCreateData,
  type MessageDraftCreateError,
  type MessageDraftCreateResponse,
  type MessageDraftRetrieveData,
  type MessageDraftRetrieveError,
  type MessageDraftRetrieveResponse,
  type MessageDraftUpdateData,
  type MessageDraftUpdateError,
  type MessageDraftUpdateResponse,
  type MessageDraftPartialUpdateData,
  type MessageDraftPartialUpdateError,
  type MessageDraftPartialUpdateResponse,
  type MessageDraftDestroyData,
  type MessageDraftDestroyError,
  type MessageDraftDestroyResponse,
  type MessageDraftPublishCreateData,
  type MessageDraftPublishCreateError,
  type MessageDraftPublishCreateResponse,
  type PageListData,
  type PageListError,
  type PageListResponse,
  type PageannotationListData,
  type PageannotationListError,
  type PageannotationListResponse,
  type PageannotationCreateData,
  type PageannotationCreateError,
  type PageannotationCreateResponse,
  type PageannotationRetrieveData,
  type PageannotationRetrieveError,
  type PageannotationRetrieveResponse,
  type PageannotationDestroyData,
  type PageannotationDestroyError,
  type PageannotationDestroyResponse,
  type ProblemreportListData,
  type ProblemreportListError,
  type ProblemreportListResponse,
  type ProblemreportRetrieveData,
  type ProblemreportRetrieveError,
  type ProblemreportRetrieveResponse,
  type ProblemreportClaimCreateData,
  type ProblemreportClaimCreateError,
  type ProblemreportClaimCreateResponse,
  type ProblemreportEscalateCreateData,
  type ProblemreportEscalateCreateError,
  type ProblemreportEscalateCreateResponse,
  type ProblemreportResolveCreateData,
  type ProblemreportResolveCreateError,
  type ProblemreportResolveCreateResponse,
  type ProblemreportUnclaimCreateData,
  type ProblemreportUnclaimCreateError,
  type ProblemreportUnclaimCreateResponse,
  type PublicbodyListData,
  type PublicbodyListError,
  type PublicbodyListResponse,
  type PublicbodyRetrieveData,
  type PublicbodyRetrieveError,
  type PublicbodyRetrieveResponse,
  type PublicbodyAutocompleteRetrieveData,
  type PublicbodyAutocompleteRetrieveError,
  type PublicbodyAutocompleteRetrieveResponse,
  type PublicbodyReconciliationRetrieveData,
  type PublicbodyReconciliationRetrieveError,
  type PublicbodyReconciliationRetrieveResponse,
  type PublicbodyReconciliationCreateData,
  type PublicbodyReconciliationCreateError,
  type PublicbodyReconciliationCreateResponse,
  type PublicbodyReconciliationFlyoutRetrieveData,
  type PublicbodyReconciliationFlyoutRetrieveError,
  type PublicbodyReconciliationFlyoutRetrieveResponse,
  type PublicbodyReconciliationFlyoutCreateData,
  type PublicbodyReconciliationFlyoutCreateError,
  type PublicbodyReconciliationFlyoutCreateResponse,
  type PublicbodyReconciliationProposePropertiesRetrieveData,
  type PublicbodyReconciliationProposePropertiesRetrieveError,
  type PublicbodyReconciliationProposePropertiesRetrieveResponse,
  type PublicbodyReconciliationProposePropertiesCreateData,
  type PublicbodyReconciliationProposePropertiesCreateError,
  type PublicbodyReconciliationProposePropertiesCreateResponse,
  type PublicbodyReconciliationSuggestServiceRetrieveData,
  type PublicbodyReconciliationSuggestServiceRetrieveError,
  type PublicbodyReconciliationSuggestServiceRetrieveResponse,
  type PublicbodyReconciliationSuggestServiceCreateData,
  type PublicbodyReconciliationSuggestServiceCreateError,
  type PublicbodyReconciliationSuggestServiceCreateResponse,
  type PublicbodySearchRetrieveData,
  type PublicbodySearchRetrieveError,
  type PublicbodySearchRetrieveResponse,
  type RequestListData,
  type RequestListError,
  type RequestListResponse,
  type RequestCreateData,
  type RequestCreateError,
  type RequestCreateResponse,
  type RequestRetrieveData,
  type RequestRetrieveError,
  type RequestRetrieveResponse,
  type RequestSearchRetrieveData,
  type RequestSearchRetrieveError,
  type RequestSearchRetrieveResponse,
  type RequestTagsAutocompleteRetrieveData,
  type RequestTagsAutocompleteRetrieveError,
  type RequestTagsAutocompleteRetrieveResponse,
  type UploadCreateData,
  type UploadCreateError,
  type UploadCreateResponse,
  type UploadUpdateData,
  type UploadUpdateError,
  type UploadUpdateResponse,
  type UploadPartialUpdateData,
  type UploadPartialUpdateError,
  type UploadPartialUpdateResponse,
  type UploadDestroyData,
  type UploadDestroyError,
  type UploadDestroyResponse,
  type UserRetrieveData,
  type UserRetrieveError,
  type UserRetrieveResponse,
  type UserpreferenceRetrieveData,
  type UserpreferenceRetrieveError,
  type UserpreferenceRetrieveResponse,
  type UserpreferenceCreateData,
  type UserpreferenceCreateError,
  type UserpreferenceCreateResponse,
  type UserpreferenceUpdateData,
  type UserpreferenceUpdateError,
  type UserpreferenceUpdateResponse,
  type UserpreferencePartialUpdateData,
  type UserpreferencePartialUpdateError,
  type UserpreferencePartialUpdateResponse,
  AttachmentListResponseTransformer,
  AttachmentCreateResponseTransformer,
  AttachmentRetrieveResponseTransformer,
  ConvertImagesToPdfResponseTransformer,
  CampaignListResponseTransformer,
  CampaignRetrieveResponseTransformer,
  DocumentListResponseTransformer,
  DocumentRetrieveResponseTransformer,
  DocumentPartialUpdateResponseTransformer,
  DocumentOembedRetrieveResponseTransformer,
  DocumentcollectionListResponseTransformer,
  DocumentcollectionRetrieveResponseTransformer,
  DocumentcollectionOembedRetrieveResponseTransformer,
  FollowingListResponseTransformer,
  GeoregionListResponseTransformer,
  GeoregionRetrieveResponseTransformer,
  GeoregionAutocompleteRetrieveResponseTransformer,
  GeoregionReconciliationRetrieveResponseTransformer,
  GeoregionReconciliationCreateResponseTransformer,
  GeoregionReconciliationFlyoutRetrieveResponseTransformer,
  GeoregionReconciliationFlyoutCreateResponseTransformer,
  GeoregionReconciliationProposePropertiesRetrieveResponseTransformer,
  GeoregionReconciliationProposePropertiesCreateResponseTransformer,
  GeoregionReconciliationSuggestServiceRetrieveResponseTransformer,
  GeoregionReconciliationSuggestServiceCreateResponseTransformer,
  JurisdictionListResponseTransformer,
  JurisdictionRetrieveResponseTransformer,
  LawListResponseTransformer,
  LawRetrieveResponseTransformer,
  LawAutocompleteRetrieveResponseTransformer,
  MessageListResponseTransformer,
  MessageRetrieveResponseTransformer,
  MessageDraftListResponseTransformer,
  MessageDraftCreateResponseTransformer,
  MessageDraftRetrieveResponseTransformer,
  MessageDraftUpdateResponseTransformer,
  MessageDraftPartialUpdateResponseTransformer,
  MessageDraftPublishCreateResponseTransformer,
  PageannotationListResponseTransformer,
  PageannotationRetrieveResponseTransformer,
  ProblemreportListResponseTransformer,
  ProblemreportRetrieveResponseTransformer,
  ProblemreportClaimCreateResponseTransformer,
  ProblemreportEscalateCreateResponseTransformer,
  ProblemreportResolveCreateResponseTransformer,
  ProblemreportUnclaimCreateResponseTransformer,
  PublicbodyRetrieveResponseTransformer,
  RequestListResponseTransformer,
  RequestRetrieveResponseTransformer,
  RequestSearchRetrieveResponseTransformer,
  RequestTagsAutocompleteRetrieveResponseTransformer,
  UploadCreateResponseTransformer,
  UploadUpdateResponseTransformer,
  UploadPartialUpdateResponseTransformer
} from './types.gen'

export const client = createClient(createConfig())

export const attachmentList = <ThrowOnError extends boolean = false>(
  options?: Options<AttachmentListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    AttachmentListResponse,
    AttachmentListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/',
    responseTransformer: AttachmentListResponseTransformer
  })
}

export const attachmentCreate = <ThrowOnError extends boolean = false>(
  options: Options<AttachmentCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    AttachmentCreateResponse,
    AttachmentCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/',
    responseTransformer: AttachmentCreateResponseTransformer
  })
}

export const attachmentRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<AttachmentRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    AttachmentRetrieveResponse,
    AttachmentRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/{id}/',
    responseTransformer: AttachmentRetrieveResponseTransformer
  })
}

export const attachmentDestroy = <ThrowOnError extends boolean = false>(
  options: Options<AttachmentDestroyData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    AttachmentDestroyResponse,
    AttachmentDestroyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/{id}/'
  })
}

export const convertImagesToPdf = <ThrowOnError extends boolean = false>(
  options: Options<ConvertImagesToPdfData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ConvertImagesToPdfResponse,
    ConvertImagesToPdfError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/attachment/convert_to_pdf/',
    responseTransformer: ConvertImagesToPdfResponseTransformer
  })
}

export const campaignList = <ThrowOnError extends boolean = false>(
  options?: Options<CampaignListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    CampaignListResponse,
    CampaignListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/campaign/',
    responseTransformer: CampaignListResponseTransformer
  })
}

export const campaignRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<CampaignRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    CampaignRetrieveResponse,
    CampaignRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/campaign/{id}/',
    responseTransformer: CampaignRetrieveResponseTransformer
  })
}

export const categoryList = <ThrowOnError extends boolean = false>(
  options?: Options<CategoryListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    CategoryListResponse,
    CategoryListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/category/'
  })
}

export const categoryRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<CategoryRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    CategoryRetrieveResponse,
    CategoryRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/category/{id}/'
  })
}

export const categoryAutocompleteRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<CategoryAutocompleteRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    CategoryAutocompleteRetrieveResponse,
    CategoryAutocompleteRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/category/autocomplete/'
  })
}

export const classificationList = <ThrowOnError extends boolean = false>(
  options?: Options<ClassificationListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ClassificationListResponse,
    ClassificationListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/classification/'
  })
}

export const classificationRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<ClassificationRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ClassificationRetrieveResponse,
    ClassificationRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/classification/{id}/'
  })
}

export const documentList = <ThrowOnError extends boolean = false>(
  options?: Options<DocumentListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    DocumentListResponse,
    DocumentListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/',
    responseTransformer: DocumentListResponseTransformer
  })
}

export const documentRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<DocumentRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    DocumentRetrieveResponse,
    DocumentRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/{id}/',
    responseTransformer: DocumentRetrieveResponseTransformer
  })
}

export const documentUpdate = <ThrowOnError extends boolean = false>(
  options: Options<DocumentUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    DocumentUpdateResponse,
    DocumentUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/{id}/'
  })
}

export const documentPartialUpdate = <ThrowOnError extends boolean = false>(
  options: Options<DocumentPartialUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    DocumentPartialUpdateResponse,
    DocumentPartialUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/{id}/',
    responseTransformer: DocumentPartialUpdateResponseTransformer
  })
}

export const documentOembedRetrieve = <ThrowOnError extends boolean = false>(
  options?: Options<DocumentOembedRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    DocumentOembedRetrieveResponse,
    DocumentOembedRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/document/oembed/',
    responseTransformer: DocumentOembedRetrieveResponseTransformer
  })
}

export const documentcollectionList = <ThrowOnError extends boolean = false>(
  options?: Options<DocumentcollectionListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    DocumentcollectionListResponse,
    DocumentcollectionListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/documentcollection/',
    responseTransformer: DocumentcollectionListResponseTransformer
  })
}

export const documentcollectionRetrieve = <
  ThrowOnError extends boolean = false
>(
  options: Options<DocumentcollectionRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    DocumentcollectionRetrieveResponse,
    DocumentcollectionRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/documentcollection/{id}/',
    responseTransformer: DocumentcollectionRetrieveResponseTransformer
  })
}

export const documentcollectionOembedRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<DocumentcollectionOembedRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    DocumentcollectionOembedRetrieveResponse,
    DocumentcollectionOembedRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/documentcollection/oembed/',
    responseTransformer: DocumentcollectionOembedRetrieveResponseTransformer
  })
}

export const followingList = <ThrowOnError extends boolean = false>(
  options?: Options<FollowingListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    FollowingListResponse,
    FollowingListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/following/',
    responseTransformer: FollowingListResponseTransformer
  })
}

export const followingCreate = <ThrowOnError extends boolean = false>(
  options: Options<FollowingCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    FollowingCreateResponse,
    FollowingCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/following/'
  })
}

export const followingDestroy = <ThrowOnError extends boolean = false>(
  options: Options<FollowingDestroyData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    FollowingDestroyResponse,
    FollowingDestroyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/following/{id}/'
  })
}

export const georegionList = <ThrowOnError extends boolean = false>(
  options?: Options<GeoregionListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GeoregionListResponse,
    GeoregionListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/',
    responseTransformer: GeoregionListResponseTransformer
  })
}

export const georegionRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<GeoregionRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GeoregionRetrieveResponse,
    GeoregionRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/{id}/',
    responseTransformer: GeoregionRetrieveResponseTransformer
  })
}

export const georegionAutocompleteRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<GeoregionAutocompleteRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GeoregionAutocompleteRetrieveResponse,
    GeoregionAutocompleteRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/autocomplete/',
    responseTransformer: GeoregionAutocompleteRetrieveResponseTransformer
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 * https://github.com/OpenRefine/OpenRefine/wiki/Reconciliation-Service-API
 * It's a bit messy.
 */
export const georegionReconciliationRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<GeoregionReconciliationRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GeoregionReconciliationRetrieveResponse,
    GeoregionReconciliationRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation/',
    responseTransformer: GeoregionReconciliationRetrieveResponseTransformer
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 * https://github.com/OpenRefine/OpenRefine/wiki/Reconciliation-Service-API
 * It's a bit messy.
 */
export const georegionReconciliationCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<GeoregionReconciliationCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    GeoregionReconciliationCreateResponse,
    GeoregionReconciliationCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation/',
    responseTransformer: GeoregionReconciliationCreateResponseTransformer
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#flyout-entry-point
 */
export const georegionReconciliationFlyoutRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<GeoregionReconciliationFlyoutRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GeoregionReconciliationFlyoutRetrieveResponse,
    GeoregionReconciliationFlyoutRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-flyout/',
    responseTransformer:
      GeoregionReconciliationFlyoutRetrieveResponseTransformer
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#flyout-entry-point
 */
export const georegionReconciliationFlyoutCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<GeoregionReconciliationFlyoutCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    GeoregionReconciliationFlyoutCreateResponse,
    GeoregionReconciliationFlyoutCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-flyout/',
    responseTransformer: GeoregionReconciliationFlyoutCreateResponseTransformer
  })
}

/**
 * Implements OpenRefine Data Extension API
 * https://github.com/OpenRefine/OpenRefine/wiki/Data-Extension-API
 */
export const georegionReconciliationProposePropertiesRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<
    GeoregionReconciliationProposePropertiesRetrieveData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    GeoregionReconciliationProposePropertiesRetrieveResponse,
    GeoregionReconciliationProposePropertiesRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-propose-properties/',
    responseTransformer:
      GeoregionReconciliationProposePropertiesRetrieveResponseTransformer
  })
}

/**
 * Implements OpenRefine Data Extension API
 * https://github.com/OpenRefine/OpenRefine/wiki/Data-Extension-API
 */
export const georegionReconciliationProposePropertiesCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    GeoregionReconciliationProposePropertiesCreateData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    GeoregionReconciliationProposePropertiesCreateResponse,
    GeoregionReconciliationProposePropertiesCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-propose-properties/',
    responseTransformer:
      GeoregionReconciliationProposePropertiesCreateResponseTransformer
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#suggest-entry-point
 *
 * Only implements prefix
 */
export const georegionReconciliationSuggestServiceRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<
    GeoregionReconciliationSuggestServiceRetrieveData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    GeoregionReconciliationSuggestServiceRetrieveResponse,
    GeoregionReconciliationSuggestServiceRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-suggest-service/',
    responseTransformer:
      GeoregionReconciliationSuggestServiceRetrieveResponseTransformer
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#suggest-entry-point
 *
 * Only implements prefix
 */
export const georegionReconciliationSuggestServiceCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    GeoregionReconciliationSuggestServiceCreateData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    GeoregionReconciliationSuggestServiceCreateResponse,
    GeoregionReconciliationSuggestServiceCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/georegion/reconciliation-suggest-service/',
    responseTransformer:
      GeoregionReconciliationSuggestServiceCreateResponseTransformer
  })
}

export const jurisdictionList = <ThrowOnError extends boolean = false>(
  options?: Options<JurisdictionListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    JurisdictionListResponse,
    JurisdictionListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/jurisdiction/',
    responseTransformer: JurisdictionListResponseTransformer
  })
}

export const jurisdictionRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<JurisdictionRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    JurisdictionRetrieveResponse,
    JurisdictionRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/jurisdiction/{id}/',
    responseTransformer: JurisdictionRetrieveResponseTransformer
  })
}

export const lawList = <ThrowOnError extends boolean = false>(
  options?: Options<LawListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    LawListResponse,
    LawListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/law/',
    responseTransformer: LawListResponseTransformer
  })
}

export const lawRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<LawRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    LawRetrieveResponse,
    LawRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/law/{id}/',
    responseTransformer: LawRetrieveResponseTransformer
  })
}

export const lawAutocompleteRetrieve = <ThrowOnError extends boolean = false>(
  options?: Options<LawAutocompleteRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    LawAutocompleteRetrieveResponse,
    LawAutocompleteRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/law/autocomplete/',
    responseTransformer: LawAutocompleteRetrieveResponseTransformer
  })
}

export const messageList = <ThrowOnError extends boolean = false>(
  options?: Options<MessageListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    MessageListResponse,
    MessageListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/',
    responseTransformer: MessageListResponseTransformer
  })
}

export const messageRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<MessageRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    MessageRetrieveResponse,
    MessageRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/{id}/',
    responseTransformer: MessageRetrieveResponseTransformer
  })
}

export const messageDraftList = <ThrowOnError extends boolean = false>(
  options?: Options<MessageDraftListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    MessageDraftListResponse,
    MessageDraftListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/',
    responseTransformer: MessageDraftListResponseTransformer
  })
}

export const messageDraftCreate = <ThrowOnError extends boolean = false>(
  options: Options<MessageDraftCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    MessageDraftCreateResponse,
    MessageDraftCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/',
    responseTransformer: MessageDraftCreateResponseTransformer
  })
}

export const messageDraftRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<MessageDraftRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    MessageDraftRetrieveResponse,
    MessageDraftRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/',
    responseTransformer: MessageDraftRetrieveResponseTransformer
  })
}

export const messageDraftUpdate = <ThrowOnError extends boolean = false>(
  options: Options<MessageDraftUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    MessageDraftUpdateResponse,
    MessageDraftUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/',
    responseTransformer: MessageDraftUpdateResponseTransformer
  })
}

export const messageDraftPartialUpdate = <ThrowOnError extends boolean = false>(
  options: Options<MessageDraftPartialUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    MessageDraftPartialUpdateResponse,
    MessageDraftPartialUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/',
    responseTransformer: MessageDraftPartialUpdateResponseTransformer
  })
}

export const messageDraftDestroy = <ThrowOnError extends boolean = false>(
  options: Options<MessageDraftDestroyData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    MessageDraftDestroyResponse,
    MessageDraftDestroyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/'
  })
}

export const messageDraftPublishCreate = <ThrowOnError extends boolean = false>(
  options: Options<MessageDraftPublishCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    MessageDraftPublishCreateResponse,
    MessageDraftPublishCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/message/draft/{id}/publish/',
    responseTransformer: MessageDraftPublishCreateResponseTransformer
  })
}

export const pageList = <ThrowOnError extends boolean = false>(
  options?: Options<PageListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PageListResponse,
    PageListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/page/'
  })
}

export const pageannotationList = <ThrowOnError extends boolean = false>(
  options?: Options<PageannotationListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PageannotationListResponse,
    PageannotationListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/',
    responseTransformer: PageannotationListResponseTransformer
  })
}

export const pageannotationCreate = <ThrowOnError extends boolean = false>(
  options: Options<PageannotationCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PageannotationCreateResponse,
    PageannotationCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/'
  })
}

export const pageannotationRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<PageannotationRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PageannotationRetrieveResponse,
    PageannotationRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/{id}/',
    responseTransformer: PageannotationRetrieveResponseTransformer
  })
}

export const pageannotationDestroy = <ThrowOnError extends boolean = false>(
  options: Options<PageannotationDestroyData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    PageannotationDestroyResponse,
    PageannotationDestroyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/pageannotation/{id}/'
  })
}

export const problemreportList = <ThrowOnError extends boolean = false>(
  options?: Options<ProblemreportListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ProblemreportListResponse,
    ProblemreportListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/',
    responseTransformer: ProblemreportListResponseTransformer
  })
}

export const problemreportRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<ProblemreportRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    ProblemreportRetrieveResponse,
    ProblemreportRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/',
    responseTransformer: ProblemreportRetrieveResponseTransformer
  })
}

export const problemreportClaimCreate = <ThrowOnError extends boolean = false>(
  options: Options<ProblemreportClaimCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ProblemreportClaimCreateResponse,
    ProblemreportClaimCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/claim/',
    responseTransformer: ProblemreportClaimCreateResponseTransformer
  })
}

export const problemreportEscalateCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<ProblemreportEscalateCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ProblemreportEscalateCreateResponse,
    ProblemreportEscalateCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/escalate/',
    responseTransformer: ProblemreportEscalateCreateResponseTransformer
  })
}

export const problemreportResolveCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<ProblemreportResolveCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ProblemreportResolveCreateResponse,
    ProblemreportResolveCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/resolve/',
    responseTransformer: ProblemreportResolveCreateResponseTransformer
  })
}

export const problemreportUnclaimCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<ProblemreportUnclaimCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    ProblemreportUnclaimCreateResponse,
    ProblemreportUnclaimCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/problemreport/{id}/unclaim/',
    responseTransformer: ProblemreportUnclaimCreateResponseTransformer
  })
}

export const publicbodyList = <ThrowOnError extends boolean = false>(
  options?: Options<PublicbodyListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PublicbodyListResponse,
    PublicbodyListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/'
  })
}

export const publicbodyRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<PublicbodyRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PublicbodyRetrieveResponse,
    PublicbodyRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/{id}/',
    responseTransformer: PublicbodyRetrieveResponseTransformer
  })
}

export const publicbodyAutocompleteRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<PublicbodyAutocompleteRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PublicbodyAutocompleteRetrieveResponse,
    PublicbodyAutocompleteRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/autocomplete/'
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 * https://github.com/OpenRefine/OpenRefine/wiki/Reconciliation-Service-API
 * It's a bit messy.
 */
export const publicbodyReconciliationRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<PublicbodyReconciliationRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PublicbodyReconciliationRetrieveResponse,
    PublicbodyReconciliationRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation/'
  })
}

/**
 * This is a OpenRefine Reconciliation API endpoint
 * https://github.com/OpenRefine/OpenRefine/wiki/Reconciliation-Service-API
 * It's a bit messy.
 */
export const publicbodyReconciliationCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<PublicbodyReconciliationCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PublicbodyReconciliationCreateResponse,
    PublicbodyReconciliationCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation/'
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#flyout-entry-point
 */
export const publicbodyReconciliationFlyoutRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<PublicbodyReconciliationFlyoutRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PublicbodyReconciliationFlyoutRetrieveResponse,
    PublicbodyReconciliationFlyoutRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-flyout/'
  })
}

/**
 * Implements OpenRefine Flyout Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#flyout-entry-point
 */
export const publicbodyReconciliationFlyoutCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<PublicbodyReconciliationFlyoutCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PublicbodyReconciliationFlyoutCreateResponse,
    PublicbodyReconciliationFlyoutCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-flyout/'
  })
}

/**
 * Implements OpenRefine Data Extension API
 * https://github.com/OpenRefine/OpenRefine/wiki/Data-Extension-API
 */
export const publicbodyReconciliationProposePropertiesRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<
    PublicbodyReconciliationProposePropertiesRetrieveData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    PublicbodyReconciliationProposePropertiesRetrieveResponse,
    PublicbodyReconciliationProposePropertiesRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-propose-properties/'
  })
}

/**
 * Implements OpenRefine Data Extension API
 * https://github.com/OpenRefine/OpenRefine/wiki/Data-Extension-API
 */
export const publicbodyReconciliationProposePropertiesCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    PublicbodyReconciliationProposePropertiesCreateData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    PublicbodyReconciliationProposePropertiesCreateResponse,
    PublicbodyReconciliationProposePropertiesCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-propose-properties/'
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#suggest-entry-point
 *
 * Only implements prefix
 */
export const publicbodyReconciliationSuggestServiceRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<
    PublicbodyReconciliationSuggestServiceRetrieveData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).get<
    PublicbodyReconciliationSuggestServiceRetrieveResponse,
    PublicbodyReconciliationSuggestServiceRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-suggest-service/'
  })
}

/**
 * Implements OpenRefine Suggest Entry Point
 * https://github.com/OpenRefine/OpenRefine/wiki/Suggest-API#suggest-entry-point
 *
 * Only implements prefix
 */
export const publicbodyReconciliationSuggestServiceCreate = <
  ThrowOnError extends boolean = false
>(
  options: Options<
    PublicbodyReconciliationSuggestServiceCreateData,
    ThrowOnError
  >
) => {
  return (options?.client ?? client).post<
    PublicbodyReconciliationSuggestServiceCreateResponse,
    PublicbodyReconciliationSuggestServiceCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/reconciliation-suggest-service/'
  })
}

export const publicbodySearchRetrieve = <ThrowOnError extends boolean = false>(
  options?: Options<PublicbodySearchRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    PublicbodySearchRetrieveResponse,
    PublicbodySearchRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/publicbody/search/'
  })
}

export const requestList = <ThrowOnError extends boolean = false>(
  options?: Options<RequestListData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RequestListResponse,
    RequestListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/',
    responseTransformer: RequestListResponseTransformer
  })
}

export const requestCreate = <ThrowOnError extends boolean = false>(
  options: Options<RequestCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    RequestCreateResponse,
    RequestCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/'
  })
}

export const requestRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<RequestRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RequestRetrieveResponse,
    RequestRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/{id}/',
    responseTransformer: RequestRetrieveResponseTransformer
  })
}

export const requestSearchRetrieve = <ThrowOnError extends boolean = false>(
  options?: Options<RequestSearchRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RequestSearchRetrieveResponse,
    RequestSearchRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/search/',
    responseTransformer: RequestSearchRetrieveResponseTransformer
  })
}

export const requestTagsAutocompleteRetrieve = <
  ThrowOnError extends boolean = false
>(
  options?: Options<RequestTagsAutocompleteRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    RequestTagsAutocompleteRetrieveResponse,
    RequestTagsAutocompleteRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/request/tags/autocomplete/',
    responseTransformer: RequestTagsAutocompleteRetrieveResponseTransformer
  })
}

export const uploadCreate = <ThrowOnError extends boolean = false>(
  options?: Options<UploadCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UploadCreateResponse,
    UploadCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/',
    responseTransformer: UploadCreateResponseTransformer
  })
}

export const uploadUpdate = <ThrowOnError extends boolean = false>(
  options: Options<UploadUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UploadUpdateResponse,
    UploadUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/{guid}/',
    responseTransformer: UploadUpdateResponseTransformer
  })
}

export const uploadPartialUpdate = <ThrowOnError extends boolean = false>(
  options: Options<UploadPartialUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    UploadPartialUpdateResponse,
    UploadPartialUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/{guid}/',
    responseTransformer: UploadPartialUpdateResponseTransformer
  })
}

export const uploadDestroy = <ThrowOnError extends boolean = false>(
  options: Options<UploadDestroyData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    UploadDestroyResponse,
    UploadDestroyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/upload/{guid}/'
  })
}

export const userRetrieve = <ThrowOnError extends boolean = false>(
  options?: Options<UserRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    UserRetrieveResponse,
    UserRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/user/'
  })
}

export const userpreferenceRetrieve = <ThrowOnError extends boolean = false>(
  options: Options<UserpreferenceRetrieveData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    UserpreferenceRetrieveResponse,
    UserpreferenceRetrieveError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}

export const userpreferenceCreate = <ThrowOnError extends boolean = false>(
  options: Options<UserpreferenceCreateData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    UserpreferenceCreateResponse,
    UserpreferenceCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}

export const userpreferenceUpdate = <ThrowOnError extends boolean = false>(
  options: Options<UserpreferenceUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    UserpreferenceUpdateResponse,
    UserpreferenceUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}

export const userpreferencePartialUpdate = <
  ThrowOnError extends boolean = false
>(
  options: Options<UserpreferencePartialUpdateData, ThrowOnError>
) => {
  return (options?.client ?? client).patch<
    UserpreferencePartialUpdateResponse,
    UserpreferencePartialUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/v1/userpreference/{key}/'
  })
}
