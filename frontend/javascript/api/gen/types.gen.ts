// This file is auto-generated by @hey-api/openapi-ts

export type BlankEnum = ''

export const BlankEnum = {
  '': ''
} as const

export type CampaignReadable = {
  readonly resource_uri: string
  readonly id: number
  name: string
  slug: string
  url?: string
  description?: string
  start_date?: Date | null
  active?: boolean
}

export type CampaignWritable = {
  name: string
  slug: string
  url?: string
  description?: string
  start_date?: Date | null
  active?: boolean
}

export type CategoryReadable = {
  readonly id: number
  name: string
  slug: string
  is_topic?: boolean
  depth: number
  readonly parent: string
  readonly children: Array<string>
}

export type CategoryWritable = {
  name: string
  slug: string
  is_topic?: boolean
  depth: number
}

export type ClassificationReadable = {
  readonly id: number
  name: string
  slug: string
  depth: number
  readonly parent: string
  readonly children: Array<string>
}

export type ClassificationWritable = {
  name: string
  slug: string
  depth: number
}

export type CreateFoiRequestFollow = {
  request: number
}

export type CreatePageAnnotation = {
  document: number
  page_number: number
  title: string
  description: string
  top?: number | null
  left?: number | null
  width?: number | null
  height?: number | null
}

export type DocumentReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly site_url: string
  title?: string
  slug?: string
  description?: string
  published_at?: Date | null
  num_pages?: number
  public?: boolean
  listed?: boolean
  allow_annotation?: boolean
  pending?: boolean
  readonly file_url: string
  file_size?: bigint | null
  cover_image: string
  page_template: string
  outline?: string
  properties?: unknown
  readonly uid: string
  data?: unknown
  readonly pages_uri: string
  readonly original: string
  readonly foirequest: string
  readonly publicbody: string
  readonly last_modified_at: string
}

export type DocumentWritable = {
  title?: string
  slug?: string
  description?: string
  published_at?: Date | null
  num_pages?: number
  public?: boolean
  listed?: boolean
  allow_annotation?: boolean
  pending?: boolean
  file_size?: bigint | null
  cover_image: string
  page_template: string
  outline?: string
  properties?: unknown
  data?: unknown
}

export type DocumentCollectionReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly site_url: string
  title?: string
  description?: string
  public?: boolean
  listed?: boolean
  created_at?: Date | null
  updated_at?: Date | null
  readonly document_count: string
  readonly document_directory_count: string
  readonly uid: string
  cover_image: string
  readonly directories: string
  readonly documents: string
  readonly documents_uri: string
  readonly pages_uri: string
  settings?: unknown
  readonly zip_download_url: string
}

export type DocumentCollectionWritable = {
  title?: string
  description?: string
  public?: boolean
  listed?: boolean
  created_at?: Date | null
  updated_at?: Date | null
  cover_image: string
  settings?: unknown
}

export type DocumentDetailReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly site_url: string
  title?: string
  slug?: string
  description?: string
  published_at?: Date | null
  num_pages?: number
  public?: boolean
  listed?: boolean
  allow_annotation?: boolean
  pending?: boolean
  readonly file_url: string
  file_size?: bigint | null
  cover_image: string
  page_template: string
  outline?: string
  properties?: unknown
  readonly uid: string
  data?: unknown
  readonly pages_uri: string
  readonly original: string
  readonly foirequest: string
  readonly publicbody: string
  readonly last_modified_at: string
  readonly pages: string
}

export type DocumentDetailWritable = {
  title?: string
  slug?: string
  description?: string
  published_at?: Date | null
  num_pages?: number
  public?: boolean
  listed?: boolean
  allow_annotation?: boolean
  pending?: boolean
  file_size?: bigint | null
  cover_image: string
  page_template: string
  outline?: string
  properties?: unknown
  data?: unknown
}

export type FoiAttachmentReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly belongs_to: string
  name: string
  filetype?: string
  size?: number | null
  readonly site_url: string
  readonly anchor_url: string
  readonly file_url: string
  pending?: boolean
  is_converted?: boolean
  readonly converted: string
  approved?: boolean
  can_approve?: boolean
  readonly can_change_approval: string
  readonly redacted: string
  is_redacted?: boolean
  readonly can_redact: string
  readonly can_delete: string
  readonly is_pdf: string
  readonly is_image: string
  readonly is_irrelevant: string
  document: DocumentReadable
}

export type FoiAttachmentWritable = {
  name: string
  filetype?: string
  size?: number | null
  pending?: boolean
  is_converted?: boolean
  approved?: boolean
  can_approve?: boolean
  is_redacted?: boolean
  document: DocumentWritable
}

export type FoiAttachmentTus = {
  message: string
  upload: string
}

export type FoiLawReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly name: string
  readonly slug: string
  readonly description: string
  readonly long_description: string
  law_type?: string
  created?: Date | null
  readonly request_note: string
  readonly request_note_html: string
  meta?: boolean
  readonly site_url: string
  readonly jurisdiction: string
  email_only?: boolean
  readonly mediator: string
  priority?: number
  url?: string
  max_response_time?: number | null
  requires_signature?: boolean
  max_response_time_unit?: MaxResponseTimeUnitEnum | BlankEnum
  readonly letter_start: string
  readonly letter_end: string
  last_modified_at: string
  readonly refusal_reasons: string
  readonly combined: Array<string>
}

export type FoiLawWritable = {
  law_type?: string
  created?: Date | null
  meta?: boolean
  email_only?: boolean
  priority?: number
  url?: string
  max_response_time?: number | null
  requires_signature?: boolean
  max_response_time_unit?: MaxResponseTimeUnitEnum | BlankEnum
  last_modified_at: string
}

export type FoiMessageReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly url: string
  readonly request: string
  readonly sent: boolean
  readonly is_response: boolean
  readonly is_postal: string
  readonly is_draft: boolean
  kind: FoiMessageKindEnum
  readonly is_escalation: boolean
  readonly content_hidden: boolean
  sender_public_body?: string | null
  recipient_public_body?: string | null
  status: FoiMessageStatusEnum | BlankEnum
  timestamp?: Date
  registered_mail_date?: Date | null
  redacted?: boolean
  readonly not_publishable: boolean
  readonly attachments: string
  readonly subject: string
  readonly content: string
  readonly redacted_subject: string
  readonly redacted_content: string
  readonly sender: string
  readonly status_name: string
  readonly last_modified_at: Date
}

export type FoiMessageWritable = {
  kind: FoiMessageKindEnum
  sender_public_body?: string | null
  recipient_public_body?: string | null
  status: FoiMessageStatusEnum | BlankEnum
  timestamp?: Date
  registered_mail_date?: Date | null
  redacted?: boolean
}

/**
 * * `email` - email
 * * `post` - postal mail
 * * `fax` - fax
 * * `upload` - upload
 * * `phone` - phone call
 * * `visit` - visit in person
 * * `import` - automatically imported
 */
export type FoiMessageKindEnum =
  | 'email'
  | 'post'
  | 'fax'
  | 'upload'
  | 'phone'
  | 'visit'
  | 'import'

/**
 * * `email` - email
 * * `post` - postal mail
 * * `fax` - fax
 * * `upload` - upload
 * * `phone` - phone call
 * * `visit` - visit in person
 * * `import` - automatically imported
 */
export const FoiMessageKindEnum = {
  EMAIL: 'email',
  POST: 'post',
  FAX: 'fax',
  UPLOAD: 'upload',
  PHONE: 'phone',
  VISIT: 'visit',
  IMPORT: 'import'
} as const

/**
 * * `awaiting_user_confirmation` - Awaiting user confirmation
 * * `publicbody_needed` - Public Body needed
 * * `awaiting_publicbody_confirmation` - Awaiting Public Body confirmation
 * * `awaiting_response` - Awaiting response
 * * `awaiting_classification` - Request awaits classification
 * * `asleep` - Request asleep
 * * `resolved` - Request resolved
 */
export type FoiMessageStatusEnum =
  | 'awaiting_user_confirmation'
  | 'publicbody_needed'
  | 'awaiting_publicbody_confirmation'
  | 'awaiting_response'
  | 'awaiting_classification'
  | 'asleep'
  | 'resolved'

/**
 * * `awaiting_user_confirmation` - Awaiting user confirmation
 * * `publicbody_needed` - Public Body needed
 * * `awaiting_publicbody_confirmation` - Awaiting Public Body confirmation
 * * `awaiting_response` - Awaiting response
 * * `awaiting_classification` - Request awaits classification
 * * `asleep` - Request asleep
 * * `resolved` - Request resolved
 */
export const FoiMessageStatusEnum = {
  AWAITING_USER_CONFIRMATION: 'awaiting_user_confirmation',
  PUBLICBODY_NEEDED: 'publicbody_needed',
  AWAITING_PUBLICBODY_CONFIRMATION: 'awaiting_publicbody_confirmation',
  AWAITING_RESPONSE: 'awaiting_response',
  AWAITING_CLASSIFICATION: 'awaiting_classification',
  ASLEEP: 'asleep',
  RESOLVED: 'resolved'
} as const

export type FoiRequestDetailReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly url: string
  readonly jurisdiction: string
  readonly is_foi: boolean
  readonly checked: boolean
  refusal_reason: string
  costs: string
  readonly public: boolean
  law: FoiLawReadable
  description: string
  readonly redacted_description: string
  summary?: string
  readonly same_as_count: number
  readonly same_as: string
  readonly due_date: Date | null
  readonly resolved_on: Date | null
  readonly last_message: Date | null
  readonly created_at: Date | null
  readonly last_modified_at: Date
  status: Status719Enum
  public_body: PublicBodyReadable
  resolution?: ResolutionEnum | BlankEnum
  readonly slug: string
  readonly title: string
  readonly reference: string
  readonly user: string
  readonly project: number
  readonly campaign: string
  tags: Array<string>
  readonly messages: string
}

export type FoiRequestDetailWritable = {
  refusal_reason: string
  costs: string
  law: FoiLawWritable
  description: string
  summary?: string
  status: Status719Enum
  public_body: PublicBodyWritable
  resolution?: ResolutionEnum | BlankEnum
  tags: Array<string>
}

export type FoiRequestFollowReadable = {
  readonly resource_uri: string
  readonly request: string
  readonly request_url: string
  timestamp?: Date
  readonly follow_count: number
  readonly follows: boolean
  readonly can_follow: boolean
}

export type FoiRequestFollowWritable = {
  timestamp?: Date
}

export type FoiRequestListReadable = {
  readonly resource_uri: string
  readonly id: number
  readonly url: string
  readonly jurisdiction: string
  readonly is_foi: boolean
  readonly checked: boolean
  refusal_reason: string
  costs: string
  readonly public: boolean
  law: string
  description: string
  readonly redacted_description: string
  summary?: string
  readonly same_as_count: number
  readonly same_as: string
  readonly due_date: Date | null
  readonly resolved_on: Date | null
  readonly last_message: Date | null
  readonly created_at: Date | null
  readonly last_modified_at: Date
  status: Status719Enum
  public_body: SimplePublicBodyReadable
  resolution?: ResolutionEnum | BlankEnum
  readonly slug: string
  readonly title: string
  readonly reference: string
  readonly user: string
  readonly project: number
  readonly campaign: string
  tags: Array<string>
}

export type FoiRequestListWritable = {
  refusal_reason: string
  costs: string
  law: string
  description: string
  summary?: string
  status: Status719Enum
  public_body: SimplePublicBodyWritable
  resolution?: ResolutionEnum | BlankEnum
  tags: Array<string>
}

export type GeoRegionReadable = {
  readonly resource_uri: string
  readonly id: number
  name: string
  slug: string
  kind: KindCfdEnum
  kind_detail?: string
  level?: number
  region_identifier?: string
  global_identifier?: string
  area?: number
  population?: number | null
  valid_on?: Date | null
  readonly part_of: string
  readonly centroid: string
}

export type GeoRegionWritable = {
  name: string
  slug: string
  kind: KindCfdEnum
  kind_detail?: string
  level?: number
  region_identifier?: string
  global_identifier?: string
  area?: number
  population?: number | null
  valid_on?: Date | null
}

export type GeoRegionDetailReadable = {
  readonly resource_uri: string
  readonly id: number
  name: string
  slug: string
  kind: KindCfdEnum
  kind_detail?: string
  level?: number
  region_identifier?: string
  global_identifier?: string
  area?: number
  population?: number | null
  valid_on?: Date | null
  readonly part_of: string
  readonly centroid: string
  readonly geom: string
  readonly gov_seat: string
}

export type GeoRegionDetailWritable = {
  name: string
  slug: string
  kind: KindCfdEnum
  kind_detail?: string
  level?: number
  region_identifier?: string
  global_identifier?: string
  area?: number
  population?: number | null
  valid_on?: Date | null
}

export type ImageAttachmentConverter = {
  title?: string
  images: Array<ImageAttachmentConverterItem>
  message: string
}

export type ImageAttachmentConverterItem = {
  attachment: string
  rotate?: number
}

export type JurisdictionReadable = {
  readonly resource_uri: string
  readonly id: number
  name: string
  rank?: number
  description?: string
  slug: string
  site_url: string
  readonly region: string
  readonly last_modified_at: Date
}

export type JurisdictionWritable = {
  name: string
  rank?: number
  description?: string
  slug: string
  site_url: string
}

/**
 * * `country` - country
 * * `state` - state
 * * `admin_district` - administrative district
 * * `district` - district
 * * `admin_cooperation` - administrative cooperation
 * * `municipality` - municipality
 * * `borough` - borough
 * * `zipcode` - zipcode
 * * `admin_court_jurisdiction` - administrative court jurisdiction
 */
export type KindCfdEnum =
  | 'country'
  | 'state'
  | 'admin_district'
  | 'district'
  | 'admin_cooperation'
  | 'municipality'
  | 'borough'
  | 'zipcode'
  | 'admin_court_jurisdiction'

/**
 * * `country` - country
 * * `state` - state
 * * `admin_district` - administrative district
 * * `district` - district
 * * `admin_cooperation` - administrative cooperation
 * * `municipality` - municipality
 * * `borough` - borough
 * * `zipcode` - zipcode
 * * `admin_court_jurisdiction` - administrative court jurisdiction
 */
export const KindCfdEnum = {
  COUNTRY: 'country',
  STATE: 'state',
  ADMIN_DISTRICT: 'admin_district',
  DISTRICT: 'district',
  ADMIN_COOPERATION: 'admin_cooperation',
  MUNICIPALITY: 'municipality',
  BOROUGH: 'borough',
  ZIPCODE: 'zipcode',
  ADMIN_COURT_JURISDICTION: 'admin_court_jurisdiction'
} as const

export type MakeRequest = {
  publicbodies: Array<number>
  subject: string
  body: string
  full_text?: boolean
  public?: boolean
  reference?: string
  tags?: Array<string>
}

/**
 * * `day` - Day(s)
 * * `working_day` - Working Day(s)
 * * `month_de` - Month(s) (DE)
 */
export type MaxResponseTimeUnitEnum = 'day' | 'working_day' | 'month_de'

/**
 * * `day` - Day(s)
 * * `working_day` - Working Day(s)
 * * `month_de` - Month(s) (DE)
 */
export const MaxResponseTimeUnitEnum = {
  DAY: 'day',
  WORKING_DAY: 'working_day',
  MONTH_DE: 'month_de'
} as const

export type PageReadable = {
  readonly document: string
  number?: number
  content?: string
  width?: number | null
  height?: number | null
  image: string
  query_highlight: string
}

export type PageWritable = {
  number?: number
  content?: string
  width?: number | null
  height?: number | null
  image: string
  query_highlight: string
}

export type PageAnnotationReadable = {
  readonly id: number
  title?: string
  description?: string
  top?: number | null
  left?: number | null
  width?: number | null
  height?: number | null
  timestamp?: Date
  readonly can_delete: boolean
  highlight?: string
  image?: string
  readonly document: string
  readonly number: number
}

export type PageAnnotationWritable = {
  title?: string
  description?: string
  top?: number | null
  left?: number | null
  width?: number | null
  height?: number | null
  timestamp?: Date
  highlight?: string
  image?: string
}

export type PaginatedCampaignListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<CampaignReadable>
}

export type PaginatedCampaignListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<CampaignWritable>
}

export type PaginatedCategoryListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<CategoryReadable>
}

export type PaginatedCategoryListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<CategoryWritable>
}

export type PaginatedClassificationListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<ClassificationReadable>
}

export type PaginatedClassificationListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<ClassificationWritable>
}

export type PaginatedDocumentCollectionListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<DocumentCollectionReadable>
}

export type PaginatedDocumentCollectionListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<DocumentCollectionWritable>
}

export type PaginatedDocumentListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<DocumentReadable>
}

export type PaginatedDocumentListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<DocumentWritable>
}

export type PaginatedFoiAttachmentListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiAttachmentReadable>
}

export type PaginatedFoiAttachmentListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiAttachmentWritable>
}

export type PaginatedFoiLawListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiLawReadable>
}

export type PaginatedFoiLawListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiLawWritable>
}

export type PaginatedFoiMessageListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiMessageReadable>
}

export type PaginatedFoiMessageListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiMessageWritable>
}

export type PaginatedFoiRequestFollowListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiRequestFollowReadable>
}

export type PaginatedFoiRequestFollowListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiRequestFollowWritable>
}

export type PaginatedFoiRequestListListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiRequestListReadable>
}

export type PaginatedFoiRequestListListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<FoiRequestListWritable>
}

export type PaginatedGeoRegionListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<GeoRegionReadable>
}

export type PaginatedGeoRegionListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<GeoRegionWritable>
}

export type PaginatedJurisdictionListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<JurisdictionReadable>
}

export type PaginatedJurisdictionListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<JurisdictionWritable>
}

export type PaginatedPageAnnotationListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<PageAnnotationReadable>
}

export type PaginatedPageAnnotationListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<PageAnnotationWritable>
}

export type PaginatedPageListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<PageReadable>
}

export type PaginatedPageListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<PageWritable>
}

export type PaginatedProblemReportListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<ProblemReportReadable>
}

export type PaginatedProblemReportListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<ProblemReportWritable>
}

export type PaginatedPublicBodyListListReadable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<PublicBodyListReadable>
}

export type PaginatedPublicBodyListListWritable = {
  count: number
  next?: string | null
  previous?: string | null
  results: Array<PublicBodyListWritable>
}

export type PatchedDocumentReadable = {
  readonly resource_uri?: string
  readonly id?: number
  readonly site_url?: string
  title?: string
  slug?: string
  description?: string
  published_at?: Date | null
  num_pages?: number
  public?: boolean
  listed?: boolean
  allow_annotation?: boolean
  pending?: boolean
  readonly file_url?: string
  file_size?: bigint | null
  cover_image?: string
  page_template?: string
  outline?: string
  properties?: unknown
  readonly uid?: string
  data?: unknown
  readonly pages_uri?: string
}

export type PatchedDocumentWritable = {
  title?: string
  slug?: string
  description?: string
  published_at?: Date | null
  num_pages?: number
  public?: boolean
  listed?: boolean
  allow_annotation?: boolean
  pending?: boolean
  file_size?: bigint | null
  cover_image?: string
  page_template?: string
  outline?: string
  properties?: unknown
  data?: unknown
}

export type PatchedFoiMessageReadable = {
  readonly resource_uri?: string
  readonly id?: number
  readonly url?: string
  readonly request?: string
  readonly sent?: boolean
  readonly is_response?: boolean
  readonly is_postal?: string
  readonly is_draft?: boolean
  kind?: FoiMessageKindEnum
  readonly is_escalation?: boolean
  readonly content_hidden?: boolean
  sender_public_body?: string | null
  recipient_public_body?: string | null
  status?: FoiMessageStatusEnum | BlankEnum
  timestamp?: Date
  registered_mail_date?: Date | null
  redacted?: boolean
  readonly not_publishable?: boolean
  readonly attachments?: string
  readonly subject?: string
  readonly content?: string
  readonly redacted_subject?: string
  readonly redacted_content?: string
  readonly sender?: string
  readonly status_name?: string
  readonly last_modified_at?: Date
}

export type PatchedFoiMessageWritable = {
  kind?: FoiMessageKindEnum
  sender_public_body?: string | null
  recipient_public_body?: string | null
  status?: FoiMessageStatusEnum | BlankEnum
  timestamp?: Date
  registered_mail_date?: Date | null
  redacted?: boolean
}

export type PatchedFoiRequestListReadable = {
  readonly resource_uri?: string
  readonly id?: number
  readonly url?: string
  readonly jurisdiction?: string
  readonly is_foi?: boolean
  readonly checked?: boolean
  refusal_reason?: string
  costs?: string
  readonly public?: boolean
  law?: string
  description?: string
  readonly redacted_description?: string
  summary?: string
  readonly same_as_count?: number
  readonly same_as?: string
  readonly due_date?: Date | null
  readonly resolved_on?: Date | null
  readonly last_message?: Date | null
  readonly created_at?: Date | null
  readonly last_modified_at?: Date
  status?: Status719Enum
  public_body?: SimplePublicBodyReadable
  resolution?: ResolutionEnum | BlankEnum
  readonly slug?: string
  readonly title?: string
  readonly reference?: string
  readonly user?: string
  readonly project?: number
  readonly campaign?: string
  tags?: Array<string>
}

export type PatchedFoiRequestListWritable = {
  refusal_reason?: string
  costs?: string
  law?: string
  description?: string
  summary?: string
  status?: Status719Enum
  public_body?: SimplePublicBodyWritable
  resolution?: ResolutionEnum | BlankEnum
  tags?: Array<string>
}

export type PatchedUploadReadable = {
  readonly id?: number
  guid?: string
  state?: string
  upload_offset?: bigint
  upload_length?: bigint
  upload_metadata?: string
  filename?: string
  temporary_file_path?: string | null
  expires?: Date | null
  token?: string | null
  user?: number | null
}

export type PatchedUploadWritable = {
  guid?: string
  state?: string
  upload_offset?: bigint
  upload_length?: bigint
  upload_metadata?: string
  filename?: string
  temporary_file_path?: string | null
  expires?: Date | null
  token?: string | null
  user?: number | null
}

export type PatchedUserPreference = {
  value?: string
}

export type ProblemReportReadable = {
  readonly id: number
  readonly message_id: number
  kind: ProblemReportKindEnum
  readonly kind_label: string
  readonly message_subject: string
  readonly message_url: string
  timestamp?: Date
  auto_submitted?: boolean
  resolved?: boolean
  description?: string
  resolution?: string
  resolution_timestamp?: Date | null
  claimed?: Date | null
  readonly related_publicbody_id: string
  escalated?: Date | null
  readonly moderator_id: number | null
  readonly is_requester: string
}

export type ProblemReportWritable = {
  kind: ProblemReportKindEnum
  timestamp?: Date
  auto_submitted?: boolean
  resolved?: boolean
  description?: string
  resolution?: string
  resolution_timestamp?: Date | null
  claimed?: Date | null
  escalated?: Date | null
}

/**
 * * `message_not_delivered` - Your message was not delivered.
 * * `attachment_broken` - The attachments don't seem to work.
 * * `redaction_needed` - More redactions are needed.
 * * `foi_help_needed` - You need help to understand or reply to this message.
 * * `other` - Something else...
 * * `not_foi` - This is not a proper FOI request.
 * * `not_nice` - Content is against netiquette.
 * * `info_outdated` - Published information is outdated.
 * * `info_wrong` - Published information is wrong.
 * * `bounce_publicbody` - You received a bounce mail from the public body.
 * * `mail_inauthentic` - Received mail does not pass authenticity checks.
 */
export type ProblemReportKindEnum =
  | 'message_not_delivered'
  | 'attachment_broken'
  | 'redaction_needed'
  | 'foi_help_needed'
  | 'other'
  | 'not_foi'
  | 'not_nice'
  | 'info_outdated'
  | 'info_wrong'
  | 'bounce_publicbody'
  | 'mail_inauthentic'

/**
 * * `message_not_delivered` - Your message was not delivered.
 * * `attachment_broken` - The attachments don't seem to work.
 * * `redaction_needed` - More redactions are needed.
 * * `foi_help_needed` - You need help to understand or reply to this message.
 * * `other` - Something else...
 * * `not_foi` - This is not a proper FOI request.
 * * `not_nice` - Content is against netiquette.
 * * `info_outdated` - Published information is outdated.
 * * `info_wrong` - Published information is wrong.
 * * `bounce_publicbody` - You received a bounce mail from the public body.
 * * `mail_inauthentic` - Received mail does not pass authenticity checks.
 */
export const ProblemReportKindEnum = {
  MESSAGE_NOT_DELIVERED: 'message_not_delivered',
  ATTACHMENT_BROKEN: 'attachment_broken',
  REDACTION_NEEDED: 'redaction_needed',
  FOI_HELP_NEEDED: 'foi_help_needed',
  OTHER: 'other',
  NOT_FOI: 'not_foi',
  NOT_NICE: 'not_nice',
  INFO_OUTDATED: 'info_outdated',
  INFO_WRONG: 'info_wrong',
  BOUNCE_PUBLICBODY: 'bounce_publicbody',
  MAIL_INAUTHENTIC: 'mail_inauthentic'
} as const

export type PublicBodyReadable = {
  readonly resource_uri: string
  id: number
  name: string
  slug: string
  other_names?: string
  description?: string
  url?: string | null
  readonly parent: string
  readonly root: string
  depth?: number
  classification: SimpleClassificationReadable
  readonly categories: Array<SimpleCategoryReadable>
  email?: string
  contact?: string
  address?: string
  fax?: string
  request_note?: string
  number_of_requests?: number
  site_url: string
  readonly request_note_html: string
  jurisdiction: JurisdictionReadable
  readonly laws: Array<FoiLawReadable>
  readonly regions: Array<string>
  source_reference?: string
  alternative_emails?: unknown
  wikidata_item?: string
  extra_data?: unknown
  readonly geo: string
}

export type PublicBodyWritable = {
  id: number
  name: string
  slug: string
  other_names?: string
  description?: string
  url?: string | null
  depth?: number
  classification: SimpleClassificationWritable
  email?: string
  contact?: string
  address?: string
  fax?: string
  request_note?: string
  number_of_requests?: number
  site_url: string
  jurisdiction: JurisdictionWritable
  source_reference?: string
  alternative_emails?: unknown
  wikidata_item?: string
  extra_data?: unknown
}

export type PublicBodyListReadable = {
  readonly resource_uri: string
  id: number
  name: string
  slug: string
  other_names?: string
  description?: string
  url?: string | null
  readonly parent: string
  readonly root: string
  depth?: number
  classification: SimpleClassificationReadable
  readonly categories: Array<SimpleCategoryReadable>
  email?: string
  contact?: string
  address?: string
  fax?: string
  request_note?: string
  number_of_requests?: number
  site_url: string
  readonly request_note_html: string
  jurisdiction: JurisdictionReadable
  readonly laws: Array<string>
  readonly regions: Array<string>
  source_reference?: string
  alternative_emails?: unknown
  wikidata_item?: string
  extra_data?: unknown
  readonly geo: string
}

export type PublicBodyListWritable = {
  id: number
  name: string
  slug: string
  other_names?: string
  description?: string
  url?: string | null
  depth?: number
  classification: SimpleClassificationWritable
  email?: string
  contact?: string
  address?: string
  fax?: string
  request_note?: string
  number_of_requests?: number
  site_url: string
  jurisdiction: JurisdictionWritable
  source_reference?: string
  alternative_emails?: unknown
  wikidata_item?: string
  extra_data?: unknown
}

/**
 * * `successful` - Request Successful
 * * `partially_successful` - Request partially successful
 * * `not_held` - Information not held
 * * `refused` - Request refused
 * * `user_withdrew_costs` - Request was withdrawn due to costs
 * * `user_withdrew` - Request was withdrawn
 */
export type ResolutionEnum =
  | 'successful'
  | 'partially_successful'
  | 'not_held'
  | 'refused'
  | 'user_withdrew_costs'
  | 'user_withdrew'

/**
 * * `successful` - Request Successful
 * * `partially_successful` - Request partially successful
 * * `not_held` - Information not held
 * * `refused` - Request refused
 * * `user_withdrew_costs` - Request was withdrawn due to costs
 * * `user_withdrew` - Request was withdrawn
 */
export const ResolutionEnum = {
  SUCCESSFUL: 'successful',
  PARTIALLY_SUCCESSFUL: 'partially_successful',
  NOT_HELD: 'not_held',
  REFUSED: 'refused',
  USER_WITHDREW_COSTS: 'user_withdrew_costs',
  USER_WITHDREW: 'user_withdrew'
} as const

export type SimpleCategoryReadable = {
  readonly id: number
  name: string
  slug: string
  is_topic?: boolean
  depth: number
}

export type SimpleCategoryWritable = {
  name: string
  slug: string
  is_topic?: boolean
  depth: number
}

export type SimpleClassificationReadable = {
  readonly id: number
  name: string
  slug: string
  depth: number
}

export type SimpleClassificationWritable = {
  name: string
  slug: string
  depth: number
}

export type SimplePublicBodyReadable = {
  readonly resource_uri: string
  id: number
  name: string
  slug: string
  other_names?: string
  description?: string
  url?: string | null
  depth?: number
  readonly classification: string
  email?: string
  contact?: string
  address?: string
  fax?: string
  request_note?: string
  number_of_requests?: number
  site_url: string
  readonly jurisdiction: string
  readonly request_note_html: string
  readonly geo: string
  last_modified_at: string
}

export type SimplePublicBodyWritable = {
  id: number
  name: string
  slug: string
  other_names?: string
  description?: string
  url?: string | null
  depth?: number
  email?: string
  contact?: string
  address?: string
  fax?: string
  request_note?: string
  number_of_requests?: number
  site_url: string
  last_modified_at: string
}

/**
 * * `awaiting_response` - awaiting_response
 * * `resolved` - resolved
 */
export type Status719Enum = 'awaiting_response' | 'resolved'

/**
 * * `awaiting_response` - awaiting_response
 * * `resolved` - resolved
 */
export const Status719Enum = {
  AWAITING_RESPONSE: 'awaiting_response',
  RESOLVED: 'resolved'
} as const

export type UpdateDocument = {
  title?: string
  description?: string
}

export type UploadReadable = {
  readonly id: number
  guid: string
  state?: string
  upload_offset?: bigint
  upload_length?: bigint
  upload_metadata?: string
  filename?: string
  temporary_file_path?: string | null
  expires?: Date | null
  token?: string | null
  user?: number | null
}

export type UploadWritable = {
  guid: string
  state?: string
  upload_offset?: bigint
  upload_length?: bigint
  upload_metadata?: string
  filename?: string
  temporary_file_path?: string | null
  expires?: Date | null
  token?: string | null
  user?: number | null
}

export type UploadCreateReadable = {
  readonly id: number
  guid?: string
  state?: string
  upload_offset?: bigint
  upload_length?: bigint
  upload_metadata?: string
  filename?: string
  temporary_file_path?: string | null
  expires?: Date | null
  token?: string | null
  user?: number | null
}

export type UploadCreateWritable = {
  guid?: string
  state?: string
  upload_offset?: bigint
  upload_length?: bigint
  upload_metadata?: string
  filename?: string
  temporary_file_path?: string | null
  expires?: Date | null
  token?: string | null
  user?: number | null
}

export type UserReadable = {
  readonly id: number
  private?: boolean
}

export type UserWritable = {
  private?: boolean
}

export type UserPreference = {
  value: string
}

export type AttachmentListData = {
  body?: never
  path?: never
  query?: {
    approved?: boolean
    belongs_to?: number
    filetype?: string
    format?: 'csv' | 'json'
    is_redacted?: boolean
    /**
     * Number of results to return per page.
     */
    limit?: number
    name?: string
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/attachment/'
}

export type AttachmentListResponses = {
  200: PaginatedFoiAttachmentListReadable
}

export type AttachmentListResponse =
  AttachmentListResponses[keyof AttachmentListResponses]

export type AttachmentCreateData = {
  body: FoiAttachmentTus
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/attachment/'
}

export type AttachmentCreateResponses = {
  201: FoiAttachmentReadable
}

export type AttachmentCreateResponse =
  AttachmentCreateResponses[keyof AttachmentCreateResponses]

export type AttachmentDestroyData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Attachment.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/attachment/{id}/'
}

export type AttachmentDestroyResponses = {
  /**
   * No response body
   */
  204: void
}

export type AttachmentDestroyResponse =
  AttachmentDestroyResponses[keyof AttachmentDestroyResponses]

export type AttachmentRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Attachment.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/attachment/{id}/'
}

export type AttachmentRetrieveResponses = {
  200: FoiAttachmentReadable
}

export type AttachmentRetrieveResponse =
  AttachmentRetrieveResponses[keyof AttachmentRetrieveResponses]

export type AttachmentApproveCreateData = {
  body: FoiAttachmentWritable
  path: {
    /**
     * A unique integer value identifying this Attachment.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/attachment/{id}/approve/'
}

export type AttachmentApproveCreateResponses = {
  200: FoiAttachmentReadable
}

export type AttachmentApproveCreateResponse =
  AttachmentApproveCreateResponses[keyof AttachmentApproveCreateResponses]

export type AttachmentToDocumentCreateData = {
  body: FoiAttachmentWritable
  path: {
    /**
     * A unique integer value identifying this Attachment.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/attachment/{id}/to_document/'
}

export type AttachmentToDocumentCreateResponses = {
  201: DocumentReadable
}

export type AttachmentToDocumentCreateResponse =
  AttachmentToDocumentCreateResponses[keyof AttachmentToDocumentCreateResponses]

export type AttachmentUnapproveCreateData = {
  body: FoiAttachmentWritable
  path: {
    /**
     * A unique integer value identifying this Attachment.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/attachment/{id}/unapprove/'
}

export type AttachmentUnapproveCreateResponses = {
  200: FoiAttachmentReadable
}

export type AttachmentUnapproveCreateResponse =
  AttachmentUnapproveCreateResponses[keyof AttachmentUnapproveCreateResponses]

export type ConvertImagesToPdfData = {
  body: ImageAttachmentConverter
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/attachment/convert_to_pdf/'
}

export type ConvertImagesToPdfResponses = {
  201: FoiAttachmentReadable
}

export type ConvertImagesToPdfResponse =
  ConvertImagesToPdfResponses[keyof ConvertImagesToPdfResponses]

export type CampaignListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/campaign/'
}

export type CampaignListResponses = {
  200: PaginatedCampaignListReadable
}

export type CampaignListResponse =
  CampaignListResponses[keyof CampaignListResponses]

export type CampaignRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this campaign.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/campaign/{id}/'
}

export type CampaignRetrieveResponses = {
  200: CampaignReadable
}

export type CampaignRetrieveResponse =
  CampaignRetrieveResponses[keyof CampaignRetrieveResponses]

export type CategoryListData = {
  body?: never
  path?: never
  query?: {
    ancestor?: string
    depth?: number
    format?: 'csv' | 'json'
    is_topic?: boolean
    /**
     * Number of results to return per page.
     */
    limit?: number
    name?: string
    /**
     * The initial index from which to return the results.
     */
    offset?: number
    parent?: string
    q?: string
  }
  url: '/api/v1/category/'
}

export type CategoryListResponses = {
  200: PaginatedCategoryListReadable
}

export type CategoryListResponse =
  CategoryListResponses[keyof CategoryListResponses]

export type CategoryRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this category.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/category/{id}/'
}

export type CategoryRetrieveResponses = {
  200: CategoryReadable
}

export type CategoryRetrieveResponse =
  CategoryRetrieveResponses[keyof CategoryRetrieveResponses]

export type CategoryAutocompleteRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/category/autocomplete/'
}

export type CategoryAutocompleteRetrieveResponses = {
  200: CategoryReadable
}

export type CategoryAutocompleteRetrieveResponse =
  CategoryAutocompleteRetrieveResponses[keyof CategoryAutocompleteRetrieveResponses]

export type ClassificationListData = {
  body?: never
  path?: never
  query?: {
    ancestor?: string
    depth?: number
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    name?: string
    /**
     * The initial index from which to return the results.
     */
    offset?: number
    parent?: string
    q?: string
  }
  url: '/api/v1/classification/'
}

export type ClassificationListResponses = {
  200: PaginatedClassificationListReadable
}

export type ClassificationListResponse =
  ClassificationListResponses[keyof ClassificationListResponses]

export type ClassificationRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Classification.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/classification/{id}/'
}

export type ClassificationRetrieveResponses = {
  200: ClassificationReadable
}

export type ClassificationRetrieveResponse =
  ClassificationRetrieveResponses[keyof ClassificationRetrieveResponses]

export type DocumentListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/document/'
}

export type DocumentListResponses = {
  200: PaginatedDocumentListReadable
}

export type DocumentListResponse =
  DocumentListResponses[keyof DocumentListResponses]

export type DocumentRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this document.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/document/{id}/'
}

export type DocumentRetrieveResponses = {
  200: DocumentDetailReadable
}

export type DocumentRetrieveResponse =
  DocumentRetrieveResponses[keyof DocumentRetrieveResponses]

export type DocumentPartialUpdateData = {
  body?: PatchedDocumentWritable
  path: {
    id: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/document/{id}/'
}

export type DocumentPartialUpdateResponses = {
  200: DocumentReadable
}

export type DocumentPartialUpdateResponse =
  DocumentPartialUpdateResponses[keyof DocumentPartialUpdateResponses]

export type DocumentUpdateData = {
  body?: UpdateDocument
  path: {
    id: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/document/{id}/'
}

export type DocumentUpdateResponses = {
  200: UpdateDocument
}

export type DocumentUpdateResponse =
  DocumentUpdateResponses[keyof DocumentUpdateResponses]

export type DocumentOembedRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/document/oembed/'
}

export type DocumentOembedRetrieveResponses = {
  200: DocumentReadable
}

export type DocumentOembedRetrieveResponse =
  DocumentOembedRetrieveResponses[keyof DocumentOembedRetrieveResponses]

export type DocumentcollectionListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/documentcollection/'
}

export type DocumentcollectionListResponses = {
  200: PaginatedDocumentCollectionListReadable
}

export type DocumentcollectionListResponse =
  DocumentcollectionListResponses[keyof DocumentcollectionListResponses]

export type DocumentcollectionRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this document collection.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/documentcollection/{id}/'
}

export type DocumentcollectionRetrieveResponses = {
  200: DocumentCollectionReadable
}

export type DocumentcollectionRetrieveResponse =
  DocumentcollectionRetrieveResponses[keyof DocumentcollectionRetrieveResponses]

export type DocumentcollectionOembedRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/documentcollection/oembed/'
}

export type DocumentcollectionOembedRetrieveResponses = {
  200: DocumentCollectionReadable
}

export type DocumentcollectionOembedRetrieveResponse =
  DocumentcollectionOembedRetrieveResponses[keyof DocumentcollectionOembedRetrieveResponses]

export type FollowingListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/following/'
}

export type FollowingListResponses = {
  200: PaginatedFoiRequestFollowListReadable
}

export type FollowingListResponse =
  FollowingListResponses[keyof FollowingListResponses]

export type FollowingCreateData = {
  body: CreateFoiRequestFollow
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/following/'
}

export type FollowingCreateResponses = {
  201: CreateFoiRequestFollow
}

export type FollowingCreateResponse =
  FollowingCreateResponses[keyof FollowingCreateResponses]

export type FollowingDestroyData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Request Follower.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/following/{id}/'
}

export type FollowingDestroyResponses = {
  /**
   * No response body
   */
  204: void
}

export type FollowingDestroyResponse =
  FollowingDestroyResponses[keyof FollowingDestroyResponses]

export type GeoregionListData = {
  body?: never
  path?: never
  query?: {
    ancestor?: string
    format?: 'csv' | 'json' | 'jsonp'
    id?: string
    kind?: string
    latlng?: string
    level?: number
    /**
     * Number of results to return per page.
     */
    limit?: number
    name?: string
    /**
     * The initial index from which to return the results.
     */
    offset?: number
    q?: string
    region_identifier?: string
    slug?: string
  }
  url: '/api/v1/georegion/'
}

export type GeoregionListResponses = {
  200: PaginatedGeoRegionListReadable
}

export type GeoregionListResponse =
  GeoregionListResponses[keyof GeoregionListResponses]

export type GeoregionRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Geo Region.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/{id}/'
}

export type GeoregionRetrieveResponses = {
  200: GeoRegionDetailReadable
}

export type GeoregionRetrieveResponse =
  GeoregionRetrieveResponses[keyof GeoregionRetrieveResponses]

export type GeoregionAutocompleteRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/autocomplete/'
}

export type GeoregionAutocompleteRetrieveResponses = {
  200: GeoRegionReadable
}

export type GeoregionAutocompleteRetrieveResponse =
  GeoregionAutocompleteRetrieveResponses[keyof GeoregionAutocompleteRetrieveResponses]

export type GeoregionReconciliationRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation/'
}

export type GeoregionReconciliationRetrieveResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationRetrieveResponse =
  GeoregionReconciliationRetrieveResponses[keyof GeoregionReconciliationRetrieveResponses]

export type GeoregionReconciliationCreateData = {
  body: GeoRegionWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation/'
}

export type GeoregionReconciliationCreateResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationCreateResponse =
  GeoregionReconciliationCreateResponses[keyof GeoregionReconciliationCreateResponses]

export type GeoregionReconciliationFlyoutRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation-flyout/'
}

export type GeoregionReconciliationFlyoutRetrieveResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationFlyoutRetrieveResponse =
  GeoregionReconciliationFlyoutRetrieveResponses[keyof GeoregionReconciliationFlyoutRetrieveResponses]

export type GeoregionReconciliationFlyoutCreateData = {
  body: GeoRegionWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation-flyout/'
}

export type GeoregionReconciliationFlyoutCreateResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationFlyoutCreateResponse =
  GeoregionReconciliationFlyoutCreateResponses[keyof GeoregionReconciliationFlyoutCreateResponses]

export type GeoregionReconciliationProposePropertiesRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation-propose-properties/'
}

export type GeoregionReconciliationProposePropertiesRetrieveResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationProposePropertiesRetrieveResponse =
  GeoregionReconciliationProposePropertiesRetrieveResponses[keyof GeoregionReconciliationProposePropertiesRetrieveResponses]

export type GeoregionReconciliationProposePropertiesCreateData = {
  body: GeoRegionWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation-propose-properties/'
}

export type GeoregionReconciliationProposePropertiesCreateResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationProposePropertiesCreateResponse =
  GeoregionReconciliationProposePropertiesCreateResponses[keyof GeoregionReconciliationProposePropertiesCreateResponses]

export type GeoregionReconciliationSuggestServiceRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation-suggest-service/'
}

export type GeoregionReconciliationSuggestServiceRetrieveResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationSuggestServiceRetrieveResponse =
  GeoregionReconciliationSuggestServiceRetrieveResponses[keyof GeoregionReconciliationSuggestServiceRetrieveResponses]

export type GeoregionReconciliationSuggestServiceCreateData = {
  body: GeoRegionWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/georegion/reconciliation-suggest-service/'
}

export type GeoregionReconciliationSuggestServiceCreateResponses = {
  200: GeoRegionReadable
}

export type GeoregionReconciliationSuggestServiceCreateResponse =
  GeoregionReconciliationSuggestServiceCreateResponses[keyof GeoregionReconciliationSuggestServiceCreateResponses]

export type JurisdictionListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/jurisdiction/'
}

export type JurisdictionListResponses = {
  200: PaginatedJurisdictionListReadable
}

export type JurisdictionListResponse =
  JurisdictionListResponses[keyof JurisdictionListResponses]

export type JurisdictionRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Jurisdiction.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/jurisdiction/{id}/'
}

export type JurisdictionRetrieveResponses = {
  200: JurisdictionReadable
}

export type JurisdictionRetrieveResponse =
  JurisdictionRetrieveResponses[keyof JurisdictionRetrieveResponses]

export type LawListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    id?: string
    jurisdiction?: number
    /**
     * Number of results to return per page.
     */
    limit?: number
    mediator?: number
    meta?: boolean
    /**
     * The initial index from which to return the results.
     */
    offset?: number
    q?: string
  }
  url: '/api/v1/law/'
}

export type LawListResponses = {
  200: PaginatedFoiLawListReadable
}

export type LawListResponse = LawListResponses[keyof LawListResponses]

export type LawRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Law.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/law/{id}/'
}

export type LawRetrieveResponses = {
  200: FoiLawReadable
}

export type LawRetrieveResponse =
  LawRetrieveResponses[keyof LawRetrieveResponses]

export type LawAutocompleteRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/law/autocomplete/'
}

export type LawAutocompleteRetrieveResponses = {
  200: FoiLawReadable
}

export type LawAutocompleteRetrieveResponse =
  LawAutocompleteRetrieveResponses[keyof LawAutocompleteRetrieveResponses]

export type MessageListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    is_response?: boolean
    /**
     * * `email` - email
     * * `post` - postal mail
     * * `fax` - fax
     * * `upload` - upload
     * * `phone` - phone call
     * * `visit` - visit in person
     * * `import` - automatically imported
     */
    kind?: 'email' | 'fax' | 'import' | 'phone' | 'post' | 'upload' | 'visit'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
    request?: number
  }
  url: '/api/v1/message/'
}

export type MessageListResponses = {
  200: PaginatedFoiMessageListReadable
}

export type MessageListResponse =
  MessageListResponses[keyof MessageListResponses]

export type MessageRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Message.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/message/{id}/'
}

export type MessageRetrieveResponses = {
  200: FoiMessageReadable
}

export type MessageRetrieveResponse =
  MessageRetrieveResponses[keyof MessageRetrieveResponses]

export type MessagePartialUpdateData = {
  body?: PatchedFoiMessageWritable
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Message.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/message/{id}/'
}

export type MessagePartialUpdateResponses = {
  200: FoiMessageReadable
}

export type MessagePartialUpdateResponse =
  MessagePartialUpdateResponses[keyof MessagePartialUpdateResponses]

export type MessageUpdateData = {
  body?: FoiMessageWritable
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Message.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/message/{id}/'
}

export type MessageUpdateResponses = {
  200: FoiMessageReadable
}

export type MessageUpdateResponse =
  MessageUpdateResponses[keyof MessageUpdateResponses]

export type MessagePublishCreateData = {
  body?: FoiMessageWritable
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Message.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/message/{id}/publish/'
}

export type MessagePublishCreateResponses = {
  200: FoiMessageReadable
}

export type MessagePublishCreateResponse =
  MessagePublishCreateResponses[keyof MessagePublishCreateResponses]

export type PageListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'rss'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/page/'
}

export type PageListResponses = {
  200: PaginatedPageListReadable
}

export type PageListResponse = PageListResponses[keyof PageListResponses]

export type PageannotationListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/pageannotation/'
}

export type PageannotationListResponses = {
  200: PaginatedPageAnnotationListReadable
}

export type PageannotationListResponse =
  PageannotationListResponses[keyof PageannotationListResponses]

export type PageannotationCreateData = {
  body: CreatePageAnnotation
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/pageannotation/'
}

export type PageannotationCreateResponses = {
  201: CreatePageAnnotation
}

export type PageannotationCreateResponse =
  PageannotationCreateResponses[keyof PageannotationCreateResponses]

export type PageannotationDestroyData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this page annotation.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/pageannotation/{id}/'
}

export type PageannotationDestroyResponses = {
  /**
   * No response body
   */
  204: void
}

export type PageannotationDestroyResponse =
  PageannotationDestroyResponses[keyof PageannotationDestroyResponses]

export type PageannotationRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this page annotation.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/pageannotation/{id}/'
}

export type PageannotationRetrieveResponses = {
  200: PageAnnotationReadable
}

export type PageannotationRetrieveResponse =
  PageannotationRetrieveResponses[keyof PageannotationRetrieveResponses]

export type ProblemreportListData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
  }
  url: '/api/v1/problemreport/'
}

export type ProblemreportListResponses = {
  200: PaginatedProblemReportListReadable
}

export type ProblemreportListResponse =
  ProblemreportListResponses[keyof ProblemreportListResponses]

export type ProblemreportRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this problem report.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/problemreport/{id}/'
}

export type ProblemreportRetrieveResponses = {
  200: ProblemReportReadable
}

export type ProblemreportRetrieveResponse =
  ProblemreportRetrieveResponses[keyof ProblemreportRetrieveResponses]

export type ProblemreportClaimCreateData = {
  body: ProblemReportWritable
  path: {
    /**
     * A unique integer value identifying this problem report.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/problemreport/{id}/claim/'
}

export type ProblemreportClaimCreateResponses = {
  200: ProblemReportReadable
}

export type ProblemreportClaimCreateResponse =
  ProblemreportClaimCreateResponses[keyof ProblemreportClaimCreateResponses]

export type ProblemreportEscalateCreateData = {
  body: ProblemReportWritable
  path: {
    /**
     * A unique integer value identifying this problem report.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/problemreport/{id}/escalate/'
}

export type ProblemreportEscalateCreateResponses = {
  200: ProblemReportReadable
}

export type ProblemreportEscalateCreateResponse =
  ProblemreportEscalateCreateResponses[keyof ProblemreportEscalateCreateResponses]

export type ProblemreportResolveCreateData = {
  body: ProblemReportWritable
  path: {
    /**
     * A unique integer value identifying this problem report.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/problemreport/{id}/resolve/'
}

export type ProblemreportResolveCreateResponses = {
  200: ProblemReportReadable
}

export type ProblemreportResolveCreateResponse =
  ProblemreportResolveCreateResponses[keyof ProblemreportResolveCreateResponses]

export type ProblemreportUnclaimCreateData = {
  body: ProblemReportWritable
  path: {
    /**
     * A unique integer value identifying this problem report.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/problemreport/{id}/unclaim/'
}

export type ProblemreportUnclaimCreateResponses = {
  200: ProblemReportReadable
}

export type ProblemreportUnclaimCreateResponse =
  ProblemreportUnclaimCreateResponses[keyof ProblemreportUnclaimCreateResponses]

export type PublicbodyListData = {
  body?: never
  path?: never
  query?: {
    category?: Array<string>
    classification?: number
    classification_id?: number | null
    format?: 'csv' | 'json' | 'jsonp'
    jurisdiction?: number
    /**
     * Number of results to return per page.
     */
    limit?: number
    lnglat?: string
    /**
     * The initial index from which to return the results.
     */
    offset?: number
    q?: string
    regions?: string
    slug?: string
  }
  url: '/api/v1/publicbody/'
}

export type PublicbodyListResponses = {
  200: PaginatedPublicBodyListListReadable
}

export type PublicbodyListResponse =
  PublicbodyListResponses[keyof PublicbodyListResponses]

export type PublicbodyRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Public Body.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/{id}/'
}

export type PublicbodyRetrieveResponses = {
  200: PublicBodyReadable
}

export type PublicbodyRetrieveResponse =
  PublicbodyRetrieveResponses[keyof PublicbodyRetrieveResponses]

export type PublicbodyAutocompleteRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/autocomplete/'
}

export type PublicbodyAutocompleteRetrieveResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyAutocompleteRetrieveResponse =
  PublicbodyAutocompleteRetrieveResponses[keyof PublicbodyAutocompleteRetrieveResponses]

export type PublicbodyReconciliationRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation/'
}

export type PublicbodyReconciliationRetrieveResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationRetrieveResponse =
  PublicbodyReconciliationRetrieveResponses[keyof PublicbodyReconciliationRetrieveResponses]

export type PublicbodyReconciliationCreateData = {
  body: PublicBodyListWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation/'
}

export type PublicbodyReconciliationCreateResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationCreateResponse =
  PublicbodyReconciliationCreateResponses[keyof PublicbodyReconciliationCreateResponses]

export type PublicbodyReconciliationFlyoutRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation-flyout/'
}

export type PublicbodyReconciliationFlyoutRetrieveResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationFlyoutRetrieveResponse =
  PublicbodyReconciliationFlyoutRetrieveResponses[keyof PublicbodyReconciliationFlyoutRetrieveResponses]

export type PublicbodyReconciliationFlyoutCreateData = {
  body: PublicBodyListWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation-flyout/'
}

export type PublicbodyReconciliationFlyoutCreateResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationFlyoutCreateResponse =
  PublicbodyReconciliationFlyoutCreateResponses[keyof PublicbodyReconciliationFlyoutCreateResponses]

export type PublicbodyReconciliationProposePropertiesRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation-propose-properties/'
}

export type PublicbodyReconciliationProposePropertiesRetrieveResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationProposePropertiesRetrieveResponse =
  PublicbodyReconciliationProposePropertiesRetrieveResponses[keyof PublicbodyReconciliationProposePropertiesRetrieveResponses]

export type PublicbodyReconciliationProposePropertiesCreateData = {
  body: PublicBodyListWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation-propose-properties/'
}

export type PublicbodyReconciliationProposePropertiesCreateResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationProposePropertiesCreateResponse =
  PublicbodyReconciliationProposePropertiesCreateResponses[keyof PublicbodyReconciliationProposePropertiesCreateResponses]

export type PublicbodyReconciliationSuggestServiceRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation-suggest-service/'
}

export type PublicbodyReconciliationSuggestServiceRetrieveResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationSuggestServiceRetrieveResponse =
  PublicbodyReconciliationSuggestServiceRetrieveResponses[keyof PublicbodyReconciliationSuggestServiceRetrieveResponses]

export type PublicbodyReconciliationSuggestServiceCreateData = {
  body: PublicBodyListWritable
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/reconciliation-suggest-service/'
}

export type PublicbodyReconciliationSuggestServiceCreateResponses = {
  200: PublicBodyListReadable
}

export type PublicbodyReconciliationSuggestServiceCreateResponse =
  PublicbodyReconciliationSuggestServiceCreateResponses[keyof PublicbodyReconciliationSuggestServiceCreateResponses]

export type PublicbodySearchRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json' | 'jsonp'
  }
  url: '/api/v1/publicbody/search/'
}

export type PublicbodySearchRetrieveResponses = {
  200: PublicBodyListReadable
}

export type PublicbodySearchRetrieveResponse =
  PublicbodySearchRetrieveResponses[keyof PublicbodySearchRetrieveResponses]

export type RequestListData = {
  body?: never
  path?: never
  query?: {
    campaign?: number
    categories?: string
    checked?: boolean
    classification?: string
    costs_max?: string
    costs_min?: string
    created_at_after?: Date
    created_at_before?: Date
    follower?: string
    format?: 'csv' | 'json'
    has_same?: boolean
    is_foi?: boolean
    jurisdiction?: number
    law?: number
    /**
     * Number of results to return per page.
     */
    limit?: number
    /**
     * The initial index from which to return the results.
     */
    offset?: number
    project?: number
    public_body?: number
    reference?: string
    /**
     * * `successful` - Request Successful
     * * `partially_successful` - Request partially successful
     * * `not_held` - Information not held
     * * `refused` - Request refused
     * * `user_withdrew_costs` - Request was withdrawn due to costs
     * * `user_withdrew` - Request was withdrawn
     */
    resolution?:
      | 'not_held'
      | 'partially_successful'
      | 'refused'
      | 'successful'
      | 'user_withdrew'
      | 'user_withdrew_costs'
    slug?: string
    /**
     * * `awaiting_user_confirmation` - Awaiting user confirmation
     * * `publicbody_needed` - Public Body needed
     * * `awaiting_publicbody_confirmation` - Awaiting Public Body confirmation
     * * `awaiting_response` - Awaiting response
     * * `awaiting_classification` - Request awaits classification
     * * `asleep` - Request asleep
     * * `resolved` - Request resolved
     */
    status?:
      | 'asleep'
      | 'awaiting_classification'
      | 'awaiting_publicbody_confirmation'
      | 'awaiting_response'
      | 'awaiting_user_confirmation'
      | 'publicbody_needed'
      | 'resolved'
    tags?: string
    user?: number
  }
  url: '/api/v1/request/'
}

export type RequestListResponses = {
  200: PaginatedFoiRequestListListReadable
}

export type RequestListResponse =
  RequestListResponses[keyof RequestListResponses]

export type RequestCreateData = {
  body: MakeRequest
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/request/'
}

export type RequestCreateResponses = {
  201: MakeRequest
}

export type RequestCreateResponse =
  RequestCreateResponses[keyof RequestCreateResponses]

export type RequestRetrieveData = {
  body?: never
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Request.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/request/{id}/'
}

export type RequestRetrieveResponses = {
  200: FoiRequestDetailReadable
}

export type RequestRetrieveResponse =
  RequestRetrieveResponses[keyof RequestRetrieveResponses]

export type RequestPartialUpdateData = {
  body?: PatchedFoiRequestListWritable
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Request.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/request/{id}/'
}

export type RequestPartialUpdateResponses = {
  200: FoiRequestListReadable
}

export type RequestPartialUpdateResponse =
  RequestPartialUpdateResponses[keyof RequestPartialUpdateResponses]

export type RequestUpdateData = {
  body: FoiRequestListWritable
  path: {
    /**
     * A unique integer value identifying this Freedom of Information Request.
     */
    id: number
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/request/{id}/'
}

export type RequestUpdateResponses = {
  200: FoiRequestListReadable
}

export type RequestUpdateResponse =
  RequestUpdateResponses[keyof RequestUpdateResponses]

export type RequestSearchRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/request/search/'
}

export type RequestSearchRetrieveResponses = {
  200: FoiRequestListReadable
}

export type RequestSearchRetrieveResponse =
  RequestSearchRetrieveResponses[keyof RequestSearchRetrieveResponses]

export type RequestTagsAutocompleteRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/request/tags/autocomplete/'
}

export type RequestTagsAutocompleteRetrieveResponses = {
  200: FoiRequestListReadable
}

export type RequestTagsAutocompleteRetrieveResponse =
  RequestTagsAutocompleteRetrieveResponses[keyof RequestTagsAutocompleteRetrieveResponses]

export type SchemaRetrieveData = {
  body?: never
  path?: never
  query?: {
    lang?:
      | 'da-dk'
      | 'de'
      | 'en'
      | 'es'
      | 'fi-fi'
      | 'it'
      | 'pt'
      | 'sv-fi'
      | 'sv-se'
      | 'zh-cn'
      | 'zh-hk'
  }
  url: '/api/v1/schema/'
}

export type SchemaRetrieveResponses = {
  200: {
    [key: string]: unknown
  }
}

export type SchemaRetrieveResponse =
  SchemaRetrieveResponses[keyof SchemaRetrieveResponses]

export type UploadCreateData = {
  body?: UploadCreateWritable
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/upload/'
}

export type UploadCreateResponses = {
  201: UploadCreateReadable
}

export type UploadCreateResponse =
  UploadCreateResponses[keyof UploadCreateResponses]

export type UploadDestroyData = {
  body?: never
  path: {
    guid: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/upload/{guid}/'
}

export type UploadDestroyResponses = {
  /**
   * No response body
   */
  204: void
}

export type UploadDestroyResponse =
  UploadDestroyResponses[keyof UploadDestroyResponses]

export type UploadPartialUpdateData = {
  body?: PatchedUploadWritable
  path: {
    guid: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/upload/{guid}/'
}

export type UploadPartialUpdateResponses = {
  200: UploadReadable
}

export type UploadPartialUpdateResponse =
  UploadPartialUpdateResponses[keyof UploadPartialUpdateResponses]

export type UploadUpdateData = {
  body: UploadWritable
  path: {
    guid: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/upload/{guid}/'
}

export type UploadUpdateResponses = {
  200: UploadReadable
}

export type UploadUpdateResponse =
  UploadUpdateResponses[keyof UploadUpdateResponses]

export type UserRetrieveData = {
  body?: never
  path?: never
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/user/'
}

export type UserRetrieveResponses = {
  200: UserReadable
}

export type UserRetrieveResponse =
  UserRetrieveResponses[keyof UserRetrieveResponses]

export type UserpreferenceRetrieveData = {
  body?: never
  path: {
    key: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/userpreference/{key}/'
}

export type UserpreferenceRetrieveResponses = {
  200: UserPreference
}

export type UserpreferenceRetrieveResponse =
  UserpreferenceRetrieveResponses[keyof UserpreferenceRetrieveResponses]

export type UserpreferencePartialUpdateData = {
  body?: PatchedUserPreference
  path: {
    key: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/userpreference/{key}/'
}

export type UserpreferencePartialUpdateResponses = {
  200: UserPreference
}

export type UserpreferencePartialUpdateResponse =
  UserpreferencePartialUpdateResponses[keyof UserpreferencePartialUpdateResponses]

export type UserpreferenceCreateData = {
  body: UserPreference
  path: {
    key: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/userpreference/{key}/'
}

export type UserpreferenceCreateResponses = {
  200: UserPreference
}

export type UserpreferenceCreateResponse =
  UserpreferenceCreateResponses[keyof UserpreferenceCreateResponses]

export type UserpreferenceUpdateData = {
  body: UserPreference
  path: {
    key: string
  }
  query?: {
    format?: 'csv' | 'json'
  }
  url: '/api/v1/userpreference/{key}/'
}

export type UserpreferenceUpdateResponses = {
  200: UserPreference
}

export type UserpreferenceUpdateResponse =
  UserpreferenceUpdateResponses[keyof UserpreferenceUpdateResponses]

export type ClientOptions = {
  baseUrl: `${string}://froide` | (string & {})
}
